WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:185
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:185
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:185
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:185
Optimize a model with 715 rows, 611 columns and 21318 nonzeros
Model has 2 quadratic constraints
Variable types: 510 continuous, 101 integer (0 binary)
Coefficient statistics:
  Matrix range     [2e-06, 7e+00]
  QMatrix range    [1e+00, 1e+00]
  Objective range  [1e+00, 1e+00]
  Bounds range     [0e+00, 0e+00]
  RHS range        [2e-01, 1e+01]
Solve qcp for cone disaggregation ...
Presolve removed 411 rows and 208 columns
Presolve time: 0.11s
Presolved: 306 rows, 603 columns, 20904 nonzeros
Variable types: 502 continuous, 101 integer (101 binary)

Root relaxation: objective -1.932388e-01, 14 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   -0.12208    0    2          -   -0.12208      -     -    0s
     0     0   -0.10193    0   10          -   -0.10193      -     -    0s
     0     0   -0.10193    0   10          -   -0.10193      -     -    0s
     0     0   -0.08760    0   10          -   -0.08760      -     -    0s
     0     0   -0.08760    0   10          -   -0.08760      -     -    0s
     0     0   -0.08035    0   11          -   -0.08035      -     -    0s
     0     0   -0.08035    0   10          -   -0.08035      -     -    0s
     0     0   -0.07878    0   11          -   -0.07878      -     -    0s
     0     0   -0.07820    0   11          -   -0.07820      -     -    0s
     0     0   -0.07820    0   10          -   -0.07820      -     -    0s
     0     2   -0.07820    0   10          -   -0.07820      -     -    0s
*   21    21              11       0.0000000   -0.07809      -  20.7    0s
*   49    23              27      -0.0679096   -0.07809  15.0%  21.8    0s
H  296   112                      -0.0679330   -0.07784  14.6%  27.3    2s
*  296   112              25      -0.0679330   -0.07784  14.6%  27.3    2s
   532   209   -0.07366    9   11   -0.06793   -0.07589  11.7%  27.5    5s
*  607   212              30      -0.0698252   -0.07554  8.18%  31.0    5s
*  668   195              25      -0.0704634   -0.07532  6.89%  31.2    6s
*  680   177              34      -0.0709773   -0.07532  6.12%  31.2    6s
*  689   167              28      -0.0716451   -0.07517  4.91%  31.6    6s
*  752   136              26      -0.0718815   -0.07508  4.45%  31.2    6s
  1548   173   -0.07224   30    7   -0.07188   -0.07411  3.10%  30.2   10s
  3158   328     cutoff   29        -0.07188   -0.07340  2.11%  25.9   15s
* 3317   304              31      -0.0720891   -0.07332  1.70%  25.7   15s
  5051   289     cutoff   29        -0.07209   -0.07271  0.86%  22.7   20s

Cutting planes:
  MIR: 4
  Flow cover: 1

Explored 6341 nodes (131528 simplex iterations) in 23.06 seconds
Thread count was 1 (of 4 available processors)

Solution count 10: -0.0720891 -0.0719815 -0.0718815 ... -0.067933
Pool objective bound -0.0720891

Optimal solution found (tolerance 1.00e-05)
Best objective -7.208907271860e-02, best bound -7.208907271860e-02, gap 0.0000%
#SOLVERNAME# GUROBI_MISOCP
#SOLVER# Gurobi.GurobiSolver(nothing,Any[(:OutputFlag,1),(:Threads,1),(:TimeLimit,3600.0),(:MIPGap,1.0e-5)])
#FILENAME# robust_100_1.cbf.gz
#INSTANCE# robust_100_1
#TIMELIMIT# 3600.0
#STATUS# Optimal
#OBJVAL# -0.07208907271860156
#OBJBOUND# -0.07208907271860156
#TIMESOLVER# 23.06436014175415
#TIMEALL# 24.702436923980713
#SOLUTION# [0.0720891,0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0773673,1.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0953085,1.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.101575,1.0,0.0,-0.0,0.0435258,1.0,0.0,-0.0,0.223047,1.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.117072,1.0,0.0,-0.0,0.0134969,1.0,0.0,-0.0,0.0,0.0,0.0,-0.0,0.0,-0.0,0.195242,1.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.125497,1.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,0.0,0.0078688,1.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,1.0,0.00373629,0.0105725,0.00414799,0.0125757,0.0175653,0.0151303,0.00449743,0.0195999,0.0127819,0.00453726,-0.000689092,0.0105389,0.0271441,0.0599432,0.0180069,0.0147718,0.0152109,0.00820245,0.0181012,0.0283945,0.0173529,0.0141657,0.0107553,0.0216109,0.0176554,0.0212807,0.01407,0.0142177,0.0151754,0.00786953,0.0110777,0.0102684,0.0132062,0.00557511,0.0126911,0.00487478,0.0264527,0.0513571,0.00408802,0.0435807,0.0152674,0.0416397,0.0127071,0.0274238,0.00965132,0.00896704,0.0136108,0.00811452,0.00794418,0.00458016,0.00482379,0.061179,0.0292545,0.0357559,0.0121953,0.00270125,0.01353,0.00708488,0.0761793,0.0117298,0.0133033,0.00320172,0.0124203,0.00675732,0.0117725,0.0115866,0.0151706,0.0150553,0.00575099,0.00131034,0.00334212,0.0113141,0.00128514,0.0182028,0.0168473,0.00657523,0.0314169,0.0114032,0.0126249,0.0189329,0.0106475,0.0150349,0.0159738,0.0152995,0.0200391,0.0204646,0.00788354,0.00922615,0.00811482,0.00343468,0.0100521,0.00013993,0.0386681,0.0131238,0.0181053,0.00915963,0.00697505,0.00802563,0.0162944,0.0102292,0.0,0.2,0.000970717,0.0027468,0.00107768,0.00326726,0.0045636,0.00393097,0.00116847,0.0050922,0.00332083,0.00117881,-0.000179031,0.00273808,0.00705224,0.0155737,0.00467834,0.00383781,0.00395191,0.00213106,0.00470282,0.0073771,0.00450842,0.00368036,0.00279431,0.00561467,0.00458701,0.0055289,0.00365549,0.00369386,0.00394267,0.00204456,0.00287808,0.00266781,0.00343108,0.00144846,0.00329724,0.0012665,0.00687262,0.013343,0.0010621,0.0113226,0.00396659,0.0108183,0.00330141,0.00712492,0.00250749,0.00232971,0.0035362,0.00210821,0.00206396,0.00118996,0.00125326,0.0158948,0.00760055,0.00928967,0.00316844,0.000701806,0.00351519,0.00184071,0.019792,0.00304748,0.00345629,0.000831832,0.00322688,0.0017556,0.00305859,0.00301029,0.00394144,0.00391148,0.00149415,0.000340437,0.000868309,0.00293949,0.000333888,0.00472923,0.00437706,0.0017083,0.00816236,0.00296265,0.00328005,0.00491892,0.0027663,0.00390619,0.00415011,0.00397493,0.00520632,0.00531686,0.0020482,0.00239702,0.00210829,0.000892357,0.0026116,3.6355e-5,0.0100463,0.00340965,0.00470389,0.00237974,0.00181217,0.00208512,0.00423342,0.00265763,0.0,0.0519617,0.2,0.00373629,0.0105725,0.00414799,0.0125757,0.0175653,0.0151303,0.00449743,0.0195999,0.0127819,0.00453726,-0.000689092,0.0105389,0.0271441,0.0599432,0.0180069,0.0147718,0.0152109,0.00820245,0.0181012,0.0283945,0.0173529,0.0141657,0.0107553,0.0216109,0.0176554,0.0212807,0.01407,0.0142177,0.0151754,0.00786953,0.0110777,0.0102684,0.0132062,0.00557511,0.0126911,0.00487478,0.0264527,0.0513571,0.00408802,0.0435807,0.0152674,0.0416397,0.0127071,0.0274238,0.00965132,0.00896704,0.0136108,0.00811452,0.00794418,0.00458016,0.00482379,0.061179,0.0292545,0.0357559,0.0121953,0.00270125,0.01353,0.00708488,0.0761793,0.0117298,0.0133033,0.00320172,0.0124203,0.00675732,0.0117725,0.0115866,0.0151706,0.0150553,0.00575099,0.00131034,0.00334212,0.0113141,0.00128514,0.0182028,0.0168473,0.00657523,0.0314169,0.0114032,0.0126249,0.0189329,0.0106475,0.0150349,0.0159738,0.0152995,0.0200391,0.0204646,0.00788354,0.00922615,0.00811482,0.00343468,0.0100521,0.00013993,0.0386681,0.0131238,0.0181053,0.00915963,0.00697505,0.00802563,0.0162944,0.0102292,0.0,0.0519617,0.000970717,0.0027468,0.00107768,0.00326726,0.0045636,0.00393097,0.00116847,0.0050922,0.00332083,0.00117881,-0.000179031,0.00273808,0.00705224,0.0155737,0.00467834,0.00383781,0.00395191,0.00213106,0.00470282,0.0073771,0.00450842,0.00368036,0.00279431,0.00561467,0.00458701,0.0055289,0.00365549,0.00369386,0.00394267,0.00204456,0.00287808,0.00266781,0.00343108,0.00144846,0.00329724,0.0012665,0.00687262,0.013343,0.0010621,0.0113226,0.00396659,0.0108183,0.00330141,0.00712492,0.00250749,0.00232971,0.0035362,0.00210821,0.00206396,0.00118996,0.00125326,0.0158948,0.00760055,0.00928967,0.00316844,0.000701806,0.00351519,0.00184071,0.019792,0.00304748,0.00345629,0.000831832,0.00322688,0.0017556,0.00305859,0.00301029,0.00394144,0.00391148,0.00149415,0.000340437,0.000868309,0.00293949,0.000333888,0.00472923,0.00437706,0.0017083,0.00816236,0.00296265,0.00328005,0.00491892,0.0027663,0.00390619,0.00415011,0.00397493,0.00520632,0.00531686,0.0020482,0.00239702,0.00210829,0.000892357,0.0026116,3.6355e-5,0.0100463,0.00340965,0.00470389,0.00237974,0.00181217,0.00208512,0.00423342,0.00265763,0.0]
