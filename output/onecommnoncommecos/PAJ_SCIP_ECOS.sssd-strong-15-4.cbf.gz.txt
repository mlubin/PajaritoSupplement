WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
WARNING: The curly syntax (sum{},prod{},norm2{}) is deprecated in favor of the new generator syntax (sum(),prod(),norm()).
WARNING: Replace sum{x[i] ^ 2,i in ind[2:length(ind)]} with sum(x[i] ^ 2 for i in ind[2:length(ind)]).
WARNING: Replace sum{x[i] ^ 2,i in ind[3:length(ind)]} with sum(x[i] ^ 2 for i in ind[3:length(ind)]).
WARNING: Replace sum{A_vals[k] * x[A_colidx[k]],k in nzrange(A_byrow,ind[i])} with sum(A_vals[k] * x[A_colidx[k]] for k in nzrange(A_byrow,ind[i])).
WARNING: The curly syntax (sum{},prod{},norm2{}) is deprecated in favor of the new generator syntax (sum(),prod(),norm()).
WARNING: Replace norm2{vars[j],j in 2:len} with norm(vars[j] for j in 2:len).
WARNING: Replace norm2{if k == ind_min
        vars_smat[ind_min,ind_min] - z_expr
    else 
        2 * smat[k,ind_min] * smat[k,v] * vars_smat[k,ind_min]
    end,k in 1:dim} with norm(if k == ind_min
    vars_smat[ind_min,ind_min] - z_expr
else 
    2 * smat[k,ind_min] * smat[k,v] * vars_smat[k,ind_min]
end for k in 1:dim).
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:171
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:171
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:171
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:171
#SOLVERNAME# PAJ_SCIP_ECOS
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,false,SCIP.SCIPSolver(("display/verblevel",0,"limits/gap",0.0,"limits/time",3600.0)),MathProgBase.DefaultMIPSolver(),0,false,true,ECOS.ECOSSolver(Any[(:verbose,false)]),true,false,false,true,false,true,false,true,true,true,true,false,false,true,false,false,false,false,1.0e-10,0.0001,1.0e-6,0.01,1.0e-6)
#FILENAME# sssd-strong-15-4.cbf.gz
#INSTANCE# sssd-strong-15-4
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       12 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =  236044.067217

Creating conic subproblem model......Done     0.00s

Starting iterative outer approximation algorithm

Iter | Best obj       | OA obj         | Rel gap     | Time (s)   
   1 |  +3.300690e+05 |  +3.039873e+05 |   7.902e-02 |   2.185e+01
   2 |  +3.300690e+05 |  +3.195374e+05 |   3.191e-02 |   2.586e+01
   3 |  +3.280827e+05 |  +3.257291e+05 |   7.174e-03 |   6.346e+01
   4 |  +3.280782e+05 |  +3.276274e+05 |   1.374e-03 |   7.049e+01
   5 |  +3.279979e+05 |  +3.279808e+05 |   5.213e-05 |   8.895e+01
   6 |  +3.279979e+05 |  +3.279979e+05 |  -9.465e-11 |   1.071e+02

Pajarito MICP solve summary:
 - Total time (s)       =       1.07e+02
 - Status               =        Optimal
 - Best feasible obj.   =  +3.279979e+05
 - Final OA obj. bound  =  +3.279979e+05
 - Relative opt. gap    =     -9.465e-11
 - MIP solve count      =              6
 - Conic solve count    =              6
 - Feas. solution count =              6
 - Integer repeat count =              0

Timers (s):
 - Setup                =       5.25e-02
 -- Transform data      =       1.17e-04
 -- Create conic data   =       7.88e-05
 -- Create MIP data     =       6.08e-04
 -- Load/solve relax    =       8.64e-03
 - Iterative algorithm  =       1.07e+02
 -- Solve MIPs          =       1.07e+02
 -- Solve conic model   =       1.99e-02
 -- Process conic data  =       2.06e-04
 -- Add conic solution  =       3.84e-05
 -- Add dual cuts       =       1.61e-02
 -- Use outer inf/cuts  =       8.73e-05

#STATUS# Optimal
#OBJVAL# 327997.92024365056
#OBJBOUND# 327997.9202746966
#TIMESOLVER# 107.13093495368958
#TIMEALL# 107.13118410110474
#SOLUTION# [0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.11022e-16,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,3.09939e-16,-3.09939e-16,1.0,9.29048e-17,-9.29048e-17,1.0,-0.0,0.0,1.0,-0.0,0.0,1.0,0.987146,0.882118,1.02564,1.02166,4.18305e-9,4.37494e-9,0.496766,-4.248e-9,-4.47457e-9,0.468683,3.12243e-8,3.19766e-8,0.506334,-3.27259e-8,-3.38839e-8,0.505352,0.0,0.493573,0.493573,0.24519,0.441059,0.441059,0.206717,0.51282,0.51282,0.259653,0.510832,0.510832,0.258155,0.987146,0.987146,1.98715,0.882118,0.882118,1.88212,1.02564,1.02564,2.02564,1.02166,1.02166,2.02166,0.987146,0.987146,0.987146,0.882118,0.882118,0.882118,1.02564,1.02564,1.02564,1.02166,1.02166,1.02166]
WARNING: If matrix A has nonzero entries smaller than zero tolerance, performance may be improved by fixing these values to zero
