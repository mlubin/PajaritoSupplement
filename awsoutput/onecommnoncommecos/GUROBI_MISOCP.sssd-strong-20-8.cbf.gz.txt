WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:185
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:185
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:185
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:185
Optimize a model with 389 rows, 361 columns and 936 nonzeros
Model has 24 quadratic constraints
Variable types: 177 continuous, 184 integer (0 binary)
Coefficient statistics:
  Matrix range     [5e-01, 6e+00]
  QMatrix range    [1e+00, 1e+00]
  Objective range  [8e+00, 1e+05]
  Bounds range     [0e+00, 0e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 281 rows and 97 columns
Presolve time: 0.00s
Presolved: 108 rows, 264 columns, 560 nonzeros
Variable types: 80 continuous, 184 integer (184 binary)

Root relaxation: objective 1.713173e+05, 116 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 171317.254    0   24          - 171317.254      -     -    0s
     0     0 226231.826    0   36          - 226231.826      -     -    0s
     0     0 239511.054    0   35          - 239511.054      -     -    0s
     0     0 344507.826    0   36          - 344507.826      -     -    0s
     0     0 344510.359    0   38          - 344510.359      -     -    0s
     0     0 379334.602    0   44          - 379334.602      -     -    0s
     0     0 398641.640    0   45          - 398641.640      -     -    0s
     0     0 402489.642    0   48          - 402489.642      -     -    0s
H    0     0                    670889.13359 402489.642  40.0%     -    0s
H    0     0                    615809.58518 402489.642  34.6%     -    0s
     0     2 405377.796    0   48 615809.585 405377.796  34.2%     -    0s
H   81    80                    609482.23005 448429.762  26.4%   3.4    0s
H  108    95                    606426.05844 448429.762  26.1%   3.2    0s
H  108    94                    606426.05833 448429.762  26.1%   3.2    0s
*  108    94              98    606426.05833 448429.762  26.1%   3.2    0s
H  291   115                    605631.77094 597986.940  1.26%  12.9    0s
H  352   129                    600902.65508 597998.394  0.48%  11.1    0s
*  352   129              57    600902.65508 597998.394  0.48%  11.2    0s
* 1297   457              57    600901.99390 599614.045  0.21%   8.4    0s
* 6424  2956              58    600482.13806 599785.887  0.12%   4.3    1s
H14320  6837                    600440.78313 599833.127  0.10%   3.8    2s
 28485 12953 599952.865   40   13 600440.783 599881.900  0.09%   3.7    5s
 60199 24509     cutoff   44      600440.783 599949.897  0.08%   3.6   10s
 91482 34372 600072.687   35   13 600440.783 599988.543  0.08%   3.6   15s
 122825 43717 600345.544   38   11 600440.783 600016.204  0.07%   3.6   20s
H123751 40247                    600350.36454 600016.746  0.06%   3.6   20s
H128822 41073                    600348.46566 600021.129  0.05%   3.6   21s
 152936 45169 600044.913   42   12 600348.466 600040.434  0.05%   3.6   25s
 183607 49572     cutoff   34      600348.466 600061.739  0.05%   3.6   30s
 213551 52794 600214.140   39   11 600348.466 600079.318  0.04%   3.6   35s
 242246 54701 600192.142   38   11 600348.466 600096.172  0.04%   3.6   40s
 270817 55747 600169.271   38   12 600348.466 600112.712  0.04%   3.6   45s
 299625 55859     cutoff   40      600348.466 600128.833  0.04%   3.7   50s
 326718 54736 600154.868   42   12 600348.466 600143.726  0.03%   3.7   55s
 355194 53016 600225.723   36   13 600348.466 600158.580  0.03%   3.7   60s
 383616 50201 600224.681   48   11 600348.466 600174.069  0.03%   3.7   65s
 411631 46007 600203.194   37    9 600348.466 600190.198  0.03%   3.7   70s
 439837 40871 600284.799   41    9 600348.466 600207.355  0.02%   3.7   75s
 467820 34178 600347.147   44   12 600348.466 600227.221  0.02%   3.7   80s
 495854 25994 600270.963   43   13 600348.466 600249.756  0.02%   3.7   85s
 523375 14658     cutoff   38      600348.466 600281.624  0.01%   3.7   90s

Cutting planes:
  Gomory: 22
  Cover: 1
  MIR: 2
  Flow cover: 5

Explored 543076 nodes (1967907 simplex iterations) in 93.95 seconds
Thread count was 1 (of 4 available processors)

Solution count 10: 600348 600350 600441 ... 606426
Pool objective bound 600342

Optimal solution found (tolerance 1.00e-05)
Warning: max constraint violation (4.4801e-06) exceeds tolerance
Best objective 6.003484656556e+05, best bound 6.003424675283e+05, gap 0.0010%
#SOLVERNAME# GUROBI_MISOCP
#SOLVER# Gurobi.GurobiSolver(nothing,Any[(:OutputFlag,1),(:Threads,1),(:TimeLimit,3600.0),(:MIPGap,1.0e-5)])
#FILENAME# sssd-strong-20-8.cbf.gz
#INSTANCE# sssd-strong-20-8
#TIMELIMIT# 3600.0
#STATUS# Optimal
#OBJVAL# 600348.4656556473
#OBJBOUND# 600342.46752833
#TIMESOLVER# 93.9481029510498
#TIMEALL# 95.60664415359497
#SOLUTION# [-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,0.0,-0.0,-0.0,1.0,-0.0,0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,0.0,-0.0,1.0,0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,-0.0,1.0,-0.0,0.0,1.0,-0.0,-0.0,1.0,0.0,-0.0,1.0,0.739675,0.697998,0.699848,0.721819,0.743256,0.738829,0.816651,0.771312,0.0,0.0,0.42518,0.0,0.0,0.411071,0.0,0.0,0.411712,0.0,0.0,0.419222,0.0,0.0,0.426361,0.0,0.0,0.4249,0.0,0.0,0.449538,0.0,0.0,0.435448,0.0,0.369838,0.369838,0.157248,0.348999,0.348999,0.143463,0.349924,0.349924,0.144068,0.36091,0.36091,0.151299,0.371628,0.371628,0.158447,0.369415,0.369415,0.156964,0.408325,0.408325,0.183556,0.385656,0.385656,0.167932,0.739675,0.739675,1.73968,0.697998,0.697998,1.698,0.699848,0.699848,1.69985,0.721819,0.721819,1.72182,0.743256,0.743256,1.74326,0.738829,0.738829,1.73883,0.816651,0.816651,1.81665,0.771312,0.771312,1.77131,0.739675,0.739675,0.739675,0.697998,0.697998,0.697998,0.699848,0.699848,0.699848,0.721819,0.721819,0.721819,0.743256,0.743256,0.743256,0.738829,0.738829,0.738829,0.816651,0.816651,0.816651,0.771312,0.771312,0.771312,1.04606,0.523029,0.739675,1.04606,0.523029,0.739675,2.46027,0.222382,0.739675,0.987118,0.493559,0.697998,0.987118,0.493559,0.697998,2.40133,0.202888,0.697998,0.989735,0.494868,0.699848,0.989735,0.494868,0.699848,2.40395,0.203743,0.699848,1.02081,0.510403,0.721819,1.02081,0.510403,0.721819,2.43502,0.213969,0.721819,1.05112,0.525561,0.743256,1.05112,0.525561,0.743256,2.46534,0.224079,0.743256,1.04486,0.522431,0.738829,1.04486,0.522431,0.738829,2.45908,0.221981,0.738829,1.15492,0.577459,0.816651,1.15492,0.577459,0.816651,2.56913,0.259588,0.816651,1.0908,0.5454,0.771312,1.0908,0.5454,0.771312,2.50501,0.237491,0.771312]
