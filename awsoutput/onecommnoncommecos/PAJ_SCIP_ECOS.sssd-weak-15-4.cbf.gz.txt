WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
WARNING: The curly syntax (sum{},prod{},norm2{}) is deprecated in favor of the new generator syntax (sum(),prod(),norm()).
WARNING: Replace sum{x[i] ^ 2,i in ind[2:length(ind)]} with sum(x[i] ^ 2 for i in ind[2:length(ind)]).
WARNING: Replace sum{x[i] ^ 2,i in ind[3:length(ind)]} with sum(x[i] ^ 2 for i in ind[3:length(ind)]).
WARNING: Replace sum{A_vals[k] * x[A_colidx[k]],k in nzrange(A_byrow,ind[i])} with sum(A_vals[k] * x[A_colidx[k]] for k in nzrange(A_byrow,ind[i])).
WARNING: The curly syntax (sum{},prod{},norm2{}) is deprecated in favor of the new generator syntax (sum(),prod(),norm()).
WARNING: Replace norm2{vars[j],j in 2:len} with norm(vars[j] for j in 2:len).
WARNING: Replace norm2{if k == ind_min
        vars_smat[ind_min,ind_min] - z_expr
    else 
        2 * smat[k,ind_min] * smat[k,v] * vars_smat[k,ind_min]
    end,k in 1:dim} with norm(if k == ind_min
    vars_smat[ind_min,ind_min] - z_expr
else 
    2 * smat[k,ind_min] * smat[k,v] * vars_smat[k,ind_min]
end for k in 1:dim).
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:171
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:171
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:171
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/ubuntu/run.jl:171
#SOLVERNAME# PAJ_SCIP_ECOS
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,false,SCIP.SCIPSolver(("display/verblevel",0,"limits/gap",0.0,"limits/time",3600.0)),MathProgBase.DefaultMIPSolver(),0,false,true,ECOS.ECOSSolver(Any[(:verbose,false)]),true,false,false,true,false,true,false,true,true,true,true,false,false,true,false,false,false,false,1.0e-10,0.0001,1.0e-6,0.01,1.0e-6)
#FILENAME# sssd-weak-15-4.cbf.gz
#INSTANCE# sssd-weak-15-4
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       12 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =  112819.583213

Creating conic subproblem model......Done     0.00s

Starting iterative outer approximation algorithm

Iter | Best obj       | OA obj         | Rel gap     | Time (s)   
   1 |  +3.281794e+05 |  +2.960786e+05 |   9.781e-02 |   4.505e+01
   2 |  +3.281794e+05 |  +3.265150e+05 |   5.072e-03 |   4.598e+01
   3 |  +3.281794e+05 |  +3.274391e+05 |   2.256e-03 |   4.777e+01
   4 |  +3.281794e+05 |  +3.278444e+05 |   1.021e-03 |   5.331e+01
   5 |  +3.279979e+05 |  +3.279469e+05 |   1.554e-04 |   6.003e+01
   6 |  +3.279979e+05 |  +3.279899e+05 |   2.436e-05 |   6.979e+01
   7 |  +3.279979e+05 |  +3.279979e+05 |   7.404e-11 |   7.787e+01

Pajarito MICP solve summary:
 - Total time (s)       =       7.79e+01
 - Status               =        Optimal
 - Best feasible obj.   =  +3.279979e+05
 - Final OA obj. bound  =  +3.279979e+05
 - Relative opt. gap    =      7.404e-11
 - MIP solve count      =              7
 - Conic solve count    =              6
 - Feas. solution count =              6
 - Integer repeat count =              1

Timers (s):
 - Setup                =       5.15e-02
 -- Transform data      =       1.13e-04
 -- Create conic data   =       7.70e-05
 -- Create MIP data     =       6.30e-04
 -- Load/solve relax    =       5.71e-03
 - Iterative algorithm  =       7.79e+01
 -- Solve MIPs          =       7.78e+01
 -- Solve conic model   =       2.08e-02
 -- Process conic data  =       2.00e-04
 -- Add conic solution  =       4.44e-05
 -- Add dual cuts       =       2.10e-02
 -- Use outer inf/cuts  =       1.16e-04

#STATUS# Optimal
#OBJVAL# 327997.92029884085
#OBJBOUND# 327997.92027455475
#TIMESOLVER# 77.92092609405518
#TIMEALL# 77.92115688323975
#SOLUTION# [0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.987147,0.882114,1.02567,1.02164,1.44759e-9,1.50642e-9,0.496766,2.06361e-9,2.16164e-9,0.468683,-2.48101e-9,-2.52789e-9,0.506335,-2.81947e-10,-2.90394e-10,0.505352,0.0,0.493574,0.493574,0.245191,0.441057,0.441057,0.206716,0.512833,0.512833,0.259665,0.51082,0.51082,0.258144,1.98715,1.98715,1.98715,1.88211,1.88211,1.88211,2.02567,2.02567,2.02567,2.02164,2.02164,2.02164,0.987147,0.987147,0.987147,0.882114,0.882114,0.882114,1.02567,1.02567,1.02567,1.02164,1.02164,1.02164]
WARNING: If matrix A has nonzero entries smaller than zero tolerance, performance may be improved by fixing these values to zero
