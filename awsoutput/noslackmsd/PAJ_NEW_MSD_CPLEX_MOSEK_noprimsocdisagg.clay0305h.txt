WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_noprimsocdisagg
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,false,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0305h.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |      120 |        3 |        3

Solving conic relaxation......Done     0.02s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000007

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Stall
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Stall
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.017844900128693553
prim_inf = -0.009594071753781463
prim_inf = -0.014147278384825768
prim_inf = -0.008597503283453989
prim_inf = -0.015615120261372795
prim_inf = -0.007634439674802707
prim_inf = -0.016836908163440967
prim_inf = -0.009726850268634735
prim_inf = -0.00044366639895088156
prim_inf = -0.00024011640380194876
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.014989344371315383
prim_inf = -0.008147156861014082
prim_inf = -0.0005146120247445651
prim_inf = -0.0003003122174050077
prim_inf = -0.014053046072604047
prim_inf = -0.006886368476443749
prim_inf = -0.015528424209151126
prim_inf = -0.009021604048029985
prim_inf = -0.014159554209982161
prim_inf = -0.007864655219236738
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.017892872947413707
prim_inf = -0.009565659018335282
prim_inf = -0.014241785298509058
prim_inf = -0.008565238907976891
prim_inf = -0.02081986507255351
prim_inf = -0.010151644799407222
prim_inf = -0.014339011521769862
prim_inf = -0.008314216240250971
prim_inf = -0.0005287196049721388
prim_inf = -0.00027143999159306986
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.01502812314674884
prim_inf = -0.00812505004068953
prim_inf = -0.0005756716732321365
prim_inf = -0.000371472017832275
prim_inf = -0.01924428980146331
prim_inf = -0.009438705616048537
prim_inf = -0.013024563095768826
prim_inf = -0.007599507846862252
prim_inf = -0.014420652168155357
prim_inf = -0.0076280401126496145
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
size(m.b_orig) = (1216,)
size(m.A_orig) = (1216,396)
size(m.final_soln) = (396,)
Constraint cones violations:
viol_lin = 1.4210854715202004e-14
viol_soc = 0.0
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       4.87e+01
 - Status               =        Optimal
 - Best feasible obj.   =  +8.092500e+03
 - Final OA obj. bound  =  +8.092500e+03
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =             14
 - Feas. solution count =              9
 - Integer repeat count =             19

Timers (s):
 - Setup                =       5.97e-02
 -- Transform data      =       4.33e-04
 -- Create conic data   =       2.50e-04
 -- Create MIP data     =       3.36e-03
 -- Load/solve relax    =       1.69e-02
 - MIP-driven algorithm =       4.87e+01
 -- Solve conic model   =       1.40e-01

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 8092.500000000003
#OBJBOUND# 8092.500000000003
#TIMESOLVER# 48.709863901138306
#TIMEALL# 48.71407890319824
#SOLUTION# [1.6570737271041094e-17,4.000000000000005,3.500000000000002,-2.008889344023584e-18,4.000000000000003,3.499999999999993,3.8863076186573303e-16,7.499999999999998,4.000000000000003,3.4999999999999956,5.500000000000007,2.284341953425634e-17,3.539015965103416e-17,6.500000000000001,5.500000000000012,5.499999999999996,11.999999999999996,4.158643703243122e-17,6.499999999999992,6.4999999999999964,8092.500000000003,49.97724655498118,49.97724655498118,45.97724655498117,53.47724655498117,49.97724655498118,78.78360733460534,73.28360733460535,78.78360733460534,78.78360733460534,85.28360733460534,-0.0,-0.0,-0.0,49.97724655498118,-0.0,49.97724655498118,-0.0,-0.0,49.97724655498118,-0.0,-0.0,-0.0,-0.0,-0.0,49.97724655498118,-0.0,-0.0,-0.0,-0.0,49.97724655498118,-0.0,-0.0,49.97724655498118,-0.0,-0.0,-0.0,49.97724655498118,-0.0,-0.0,-0.0,49.97724655498118,-0.0,-0.0,45.97724655498117,-0.0,-0.0,-0.0,-0.0,45.97724655498117,-0.0,45.97724655498117,-0.0,-0.0,-0.0,-0.0,-0.0,45.97724655498117,-0.0,53.47724655498117,-0.0,-0.0,-0.0,-0.0,-0.0,53.47724655498117,-0.0,53.47724655498117,-0.0,-0.0,-0.0,-0.0,-0.0,53.47724655498117,-0.0,-0.0,-0.0,49.97724655498118,-0.0,-0.0,-0.0,49.97724655498118,-0.0,-0.0,-0.0,49.97724655498118,-0.0,-0.0,-0.0,49.97724655498118,-0.0,-0.0,-0.0,-0.0,78.78360733460534,-0.0,78.78360733460534,-0.0,-0.0,78.78360733460534,-0.0,-0.0,-0.0,-0.0,-0.0,78.78360733460534,-0.0,-0.0,-0.0,-0.0,73.28360733460535,-0.0,-0.0,73.28360733460535,-0.0,-0.0,-0.0,73.28360733460535,-0.0,-0.0,-0.0,73.28360733460535,-0.0,-0.0,78.78360733460534,-0.0,-0.0,-0.0,-0.0,78.78360733460534,-0.0,78.78360733460534,-0.0,-0.0,-0.0,-0.0,-0.0,78.78360733460534,-0.0,78.78360733460534,-0.0,-0.0,-0.0,-0.0,-0.0,78.78360733460534,-0.0,78.78360733460534,-0.0,-0.0,-0.0,-0.0,-0.0,78.78360733460534,-0.0,-0.0,-0.0,85.28360733460534,-0.0,-0.0,-0.0,85.28360733460534,-0.0,-0.0,-0.0,85.28360733460534,-0.0,-0.0,-0.0,85.28360733460534,-0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,-0.0,49.97724655498118,-0.0,-0.0,49.97724655498118,-0.0,-0.0,45.97724655498117,-0.0,-0.0,53.47724655498117,-0.0,-0.0,49.97724655498118,-0.0,-0.0,78.78360733460534,-0.0,-0.0,73.28360733460535,-0.0,-0.0,78.78360733460534,-0.0,-0.0,78.78360733460534,-0.0,-0.0,85.28360733460534,-0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,2.008888988969406e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2520.220558138512,6236.7796142437555,2515.5261209791665,5393.677464100011,2130.549339458623,6230.644326426416,2884.103943299135,6237.19575904728,2498.279596357262,7274.167123470515,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2516.5936561971557,6232.24839427038,2498.3682756353733,5371.2937866789,2128.8727513570434,6228.305419030794,2882.201627797748,6234.9860628603365,2515.5416772444905,7302.011498286095,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2520.281578654524,6236.690572315839,2515.645887712863,5393.590061977931,2136.154728958845,6238.52749229746,2880.4745964191357,6232.771228364371,2498.385910313011,7274.281081101998,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.0088889929144522e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2516.642840076607,6232.179214664668,2498.4446028630823,5371.484967854828,2134.4547633535394,6236.292747423662,2878.5684169599026,6230.535070047579,2515.8725933388246,7301.1441898483135,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18,2.008888988969406e-18]
