WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_eprhs6
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0304m.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       96 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000007

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
prim_inf = -1.7753450498537404
prim_inf = -0.808349428490601
prim_inf = -1.4017754002057146
prim_inf = -1.1165846906862669
prim_inf = -1.6899387995650272e-6
prim_inf = -3.042410554598973e-7
prim_inf = -1.2509389628034007
prim_inf = -0.1184288849969306
prim_inf = -1.4552338562291425
prim_inf = -1.293179134744605
prim_inf = -0.2676331861177914
prim_inf = -0.08406614268824342
prim_inf = -0.43395835180672293
prim_inf = -0.16086987063499691
prim_inf = -0.5344137389720345
prim_inf = -0.1763487610478478
prim_inf = -4.5565216222342997e-7
prim_inf = -5.478055946639415e-7
prim_inf = -0.5565009889061798
prim_inf = -0.1313828391600964
prim_inf = -0.8490247216436728
prim_inf = -0.2950740286830751
prim_inf = -1.1019273588362921
prim_inf = -0.3249300235283954
prim_inf = -1.7561953466340583
prim_inf = -0.9408268132247031
prim_inf = -1.3654888154028502
prim_inf = -0.8654290390835921
prim_inf = -1.089263715928876
prim_inf = -0.8947457924616913
prim_inf = -1.8017921951167999
prim_inf = -1.1242077072861125
prim_inf = -1.4802316338875698
prim_inf = -1.135773432276892
prim_inf = -0.26148827741599234
prim_inf = -0.07036314385095466
prim_inf = -0.43199616158290155
prim_inf = -0.14505051275318692
prim_inf = -0.5342870309746104
prim_inf = -0.1580509573686868
prim_inf = 8.667670048367881e-8
prim_inf = 1.333462975594557e-7
prim_inf = -0.5881554611779052
prim_inf = -0.11212794858897723
prim_inf = -0.8788064522456125
prim_inf = -0.2681119015828699
prim_inf = -1.1271806191158475
prim_inf = -0.29377854110521184
prim_inf = -1.6179621082712856
prim_inf = -0.8076279366323433
prim_inf = -0.03516151016253488
prim_inf = -0.16819120936423815
prim_inf = -0.8545077205066476
prim_inf = -0.05809103743333566
prim_inf = -1.644254687960256e-8
prim_inf = 1.354365508632327e-10
prim_inf = -1.6174433284509178
prim_inf = -1.278508534749335
prim_inf = -0.36106739782007935
prim_inf = -0.07945401605411462
prim_inf = -0.4935008556979028
prim_inf = -0.16132266934073414
prim_inf = -0.5789130425441726
prim_inf = -0.17603014766791603
prim_inf = -0.10345711819088521
prim_inf = -0.07344796070474935
prim_inf = -1.3663734760518196
prim_inf = -0.23108663489506398
prim_inf = -1.159411894513255
prim_inf = -0.3635177894163917
prim_inf = -1.3138529848083635
prim_inf = -0.3668838676780979
prim_inf = -1.590825720575367
prim_inf = -0.958958821062879
prim_inf = -2.253002406860105e-8
prim_inf = -4.859812996471646e-8
prim_inf = -1.7961962678503625
prim_inf = -0.9663788558393396
prim_inf = -0.7832498699624075
prim_inf = -0.9779878058149158
prim_inf = -1.641684422217395
prim_inf = -1.1299855933079925
prim_inf = -0.36451784402811427
prim_inf = -0.07030806962848146
prim_inf = -0.4956045434284988
prim_inf = -0.1469999324708624
prim_inf = -0.5817375308276951
prim_inf = -0.15889665160557342
prim_inf = -0.10854400377718942
prim_inf = -0.05830284646860484
prim_inf = -1.3840060151715647
prim_inf = -0.19164336919857305
prim_inf = -1.1825903945522214
prim_inf = -0.3277188107526854
prim_inf = -1.3338841131567278
prim_inf = -0.3304539364783068
size(m.b_orig) = (591,)
size(m.A_orig) = (591,153)
size(m.final_soln) = (153,)
Constraint cones violations:
viol_lin = 0.0
viol_soc = 2.6669270880574913e-6
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       5.66e+00
 - Status               =        Optimal
 - Best feasible obj.   =  +4.026239e+04
 - Final OA obj. bound  =  +4.026239e+04
 - Relative opt. gap    =      1.243e-08
 - Conic solve count    =             17
 - Feas. solution count =             12
 - Integer repeat count =             53

Timers (s):
 - Setup                =       4.27e-02
 -- Transform data      =       2.02e-04
 -- Create conic data   =       1.06e-04
 -- Create MIP data     =       2.04e-03
 -- Load/solve relax    =       6.88e-03
 - MIP-driven algorithm =       5.61e+00
 -- Solve conic model   =       5.91e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 40262.387996499645
#OBJBOUND# 40262.387495868854
#TIMESOLVER# 5.656342029571533
#TIMEALL# 5.658169984817505
#SOLUTION# [13.00581674234192,15.50581644868534,13.00581644287298,2.499999961590716,6.200533551038004e-7,2.500000292625315,40.21923908148264,35.89904056344462,36.219239108222574,4.320198921350381,4.000000229739507,0.32019874860777114,40262.387996499645,29.854249461642453,16.848432790826795,14.348433111633668,16.84843315108453,49.9999991813169,9.780760167557931,14.10095871675713,13.780760188725864,-0.0,-0.0,-0.0,-0.0,0.0,1.0,0.0,0.0,-0.0,0.0,0.0,0.0,-0.0,-0.0,-0.0,1.0,1.0,-0.0,1.0,1.0,1.0,-0.0,0.0,-0.0,1359.6601336802573,3103.662753697583,0.0,9.82011899668994,12.335011374493476,1.0,4.629244831653295,31.37074347107228,1.0,2.5474458654711816,29.700855886156095,1.0,1883.4805130449988,2063.404156707943,0.0,1551.0032607820915,4787.154517129481,0.0,1762.9273436838262,4510.078343166407,-0.0,1591.889002529404,4593.707735273991,-0.0,6.999997733827329,8.999997826929388,1.0,384.4485040112883,1522.8399475413685,-0.0,511.60186300941234,1388.2360066764454,0.0,446.5434927911389,1439.4165021617214,0.0,1252.9254040179828,2585.505526663528,9.280462817182142,13.46718397285325,10.710560581965634,12.68887571094042,8.16437204678668,12.441329285868317,1974.0422668547621,2520.7404773414555,1545.5185162635162,5480.950230388209,1760.720517832536,4897.9210080663615,1591.751346608238,4979.473497830616,6.999995564512635,9.000004245367483,393.0776780453186,1933.3793000460232,525.1949145565329,1615.3519100187473,459.46000958120936,1667.856604821647,1577.4587369934652,3101.784643658269,29.135224231576522,5.763582425043409,1.6840737582185372,32.33822082151181,8.11357149112252,27.886428168875877,1628.6591042030407,2021.4533021659922,1073.092789871784,4775.656121323155,1548.6439404852251,4511.189216433086,1455.124075074154,4592.905156645658,5.896564002369779,9.379835304969754,294.7136481295152,1608.7201042907095,477.0719239282308,1446.3252409974082,431.061996001937,1476.411113947565,1472.8819516350554,2630.5386300296136,28.60573365150024,7.394265470312377,7.962137023928061,13.573065316184943,13.728087723683236,10.668651382678766,1738.800050309651,2503.9719379157546,1075.3580836776605,5480.7937752196885,1550.8102103616613,4903.074687609717,1458.022809516347,4981.761160670868,5.914826557439445,9.299397193261633,303.13894855407153,2018.4293967968708,490.5949459035756,1672.9546530818495,444.01495341666293,1704.5099983120144]
