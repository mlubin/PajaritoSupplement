WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_eprhs6
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0304h.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       96 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000002

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Stall
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Stall
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Stall
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing incumbent cb
checked feas: accepting
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.0506200375648973
prim_inf = -0.13442700443459898
prim_inf = -3.815318905253662e-8
prim_inf = -3.750059818230511e-8
prim_inf = -0.013374708581011419
prim_inf = -0.019405400893361957
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -6.501636562461499e-9
prim_inf = 8.816641638986766e-9
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.04681547121788299
prim_inf = -0.12465767450939325
prim_inf = -0.05953347868890546
prim_inf = -0.060588011955388765
prim_inf = -0.0536579678660587
prim_inf = -0.07619131580722183
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 9.529685485176742e-9
prim_inf = 1.949592842720449e-8
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.004112340349763599
prim_inf = -0.011249164461830219
prim_inf = -0.009696439329189843
prim_inf = -0.01002397062867999
prim_inf = 8.997460554382997e-9
prim_inf = 9.76729097601492e-9
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.0008890761093880428
prim_inf = -0.00033782919445002335
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 5.5493387662863825e-9
prim_inf = -4.18826573422848e-9
prim_inf = -0.06920602699906908
prim_inf = -0.0701834876113594
prim_inf = -0.0410918779379017
prim_inf = -0.05834724025035598
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.000909080078486113
prim_inf = -0.00041421436571909
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
size(m.b_orig) = (863,)
size(m.A_orig) = (863,273)
size(m.final_soln) = (273,)
Constraint cones violations:
viol_lin = 6.857698053863714e-8
viol_soc = 9.751878678798676e-5
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       4.30e+00
 - Status               =        Optimal
 - Best feasible obj.   =  +4.026238e+04
 - Final OA obj. bound  =  +4.026238e+04
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =             19
 - Feas. solution count =             14
 - Integer repeat count =             57

Timers (s):
 - Setup                =       4.90e-02
 -- Transform data      =       3.41e-04
 -- Create conic data   =       1.78e-04
 -- Create MIP data     =       2.67e-03
 -- Load/solve relax    =       1.15e-02
 - MIP-driven algorithm =       4.25e+00
 -- Solve conic model   =       1.50e-01

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 40262.38452530695
#OBJBOUND# 40262.38452530695
#TIMESOLVER# 4.30397891998291
#TIMEALL# 4.306936979293823
#SOLUTION# [13.005813234448548,15.505812128995156,13.005812075911598,2.499999274283402,1.5498610982240702e-6,2.500000403793221,40.219238405890664,35.899039011934114,36.2192384813189,4.320199493764248,4.000000047689829,0.32019981225973637,40262.38452530695,29.85424590720276,16.84843278932613,14.34843392952369,16.8484340058867,49.999998341060326,9.780759935169664,14.100959428933912,13.780759982859493,-0.0,-0.0,-0.0,29.85424590720276,-0.0,-0.0,-0.0,29.85424590720276,-0.0,-0.0,-0.0,29.85424590720276,-0.0,-0.0,-0.0,16.84843278932613,-0.0,-0.0,16.84843278932613,-0.0,-0.0,-0.0,16.84843278932613,-0.0,-0.0,-0.0,-0.0,14.34843392952369,-0.0,-0.0,14.34843392952369,-0.0,14.34843392952369,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,16.8484340058867,-0.0,-0.0,16.8484340058867,-0.0,16.8484340058867,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,49.999998341060326,-0.0,-0.0,-0.0,49.999998341060326,-0.0,-0.0,-0.0,49.999998341060326,-0.0,-0.0,-0.0,9.780759935169664,-0.0,-0.0,9.780759935169664,-0.0,-0.0,-0.0,9.780759935169664,-0.0,-0.0,-0.0,-0.0,14.100959428933912,-0.0,-0.0,14.100959428933912,-0.0,14.100959428933912,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,13.780759982859493,-0.0,-0.0,13.780759982859493,-0.0,13.780759982859493,-0.0,-0.0,-0.0,-0.0,0.0,-0.0,-0.0,0.0,-0.0,0.0,0.0,-0.0,1.0,1.0,1.0,-0.0,0.0,-0.0,0.0,1.0,1.0,-0.0,0.0,1.0,-0.0,-0.0,0.0,-0.0,-0.0,29.85424590720276,16.84843278932613,-0.0,-0.0,14.34843392952369,-0.0,-0.0,16.8484340058867,-0.0,-0.0,-0.0,-0.0,49.999998341060326,9.780759935169664,-0.0,-0.0,14.100959428933912,-0.0,-0.0,13.780759982859493,-0.0,-0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,-0.0,0.0,-0.0,1.4693659413451101e-8,1.4693659413451095e-8,291.26631272390654,102.62365609311912,205.87756017642522,198.83706056344673,285.78753357311217,191.7797355894024,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,891.2760015883297,2499.9998230806314,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,290.697108323891,102.08451818275827,212.22364276746939,205.07910059494407,291.72245469005384,197.4686897347433,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,891.2759944361549,2499.999809726472,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,284.45663063874434,96.20999890600845,206.88540684210793,199.84365715659064,283.86972716916705,189.90934477284878,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,891.6728255314407,2500.4223608279585,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451085e-8,1.4693659413451004e-8,1.4693659413451101e-8,1.4693659413451095e-8,283.8696866660247,95.66326511184592,213.2914901892174,206.10344647078196,289.8449897233931,195.6453513857828,1.4693659413451101e-8,1.4693659413451095e-8,1.4693659413451101e-8,1.4693659413451095e-8,1.4693659413451101e-8,1.4693659413451095e-8,1.4693659413451101e-8,1.4693659413451095e-8,891.6817580824942,2500.517916391405,1.4693659413451101e-8,1.4693659413451095e-8,1.4693659413451101e-8,1.4693659413451095e-8,1.4693659413451101e-8,1.4693659413451095e-8]
