WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_eprhs8
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-8),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0305m.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |      120 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.001371

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
prim_inf = 5.1622691898955964e-8
prim_inf = 2.4162545742001384e-8
prim_inf = 1.9268804862804245e-7
prim_inf = 1.254193193744868e-8
prim_inf = 8.10280198493274e-9
prim_inf = 1.5960722521413118e-8
prim_inf = 1.6616240827715956e-8
prim_inf = 2.1351297618821263e-7
prim_inf = 1.9116191651846748e-7
prim_inf = 1.332073225057684e-7
prim_inf = -1.3147752787721014
prim_inf = 3.490834288299993e-10
prim_inf = 2.4276937793388242e-8
prim_inf = 5.149736104215208e-7
prim_inf = 1.3425509592934759e-8
prim_inf = -0.48298069221707907
prim_inf = -0.6622499591593112
prim_inf = -0.456294051796009
prim_inf = 6.699210075566953e-10
prim_inf = 5.2304173436823476e-8
prim_inf = 2.281353772559669e-8
prim_inf = 3.5228333672421286e-7
prim_inf = -0.02229682959494994
prim_inf = -0.09049577974894873
prim_inf = -0.09373861760164459
prim_inf = 4.1584007703932e-7
prim_inf = 4.939836344419746e-7
prim_inf = 1.6827334547997452e-7
prim_inf = 3.7260861063259654e-11
prim_inf = 1.7806269170250744e-7
prim_inf = 5.1622691898955964e-8
prim_inf = 3.1800482247490436e-8
prim_inf = 1.926714503497351e-7
prim_inf = 1.5101113604032435e-7
prim_inf = 8.096662895695772e-9
prim_inf = 1.4674424164695665e-7
prim_inf = 1.8537343748903368e-7
prim_inf = 2.467813828843646e-7
prim_inf = 1.8786170130624669e-7
prim_inf = 2.689275788725354e-7
prim_inf = -0.5307791047587989
prim_inf = -0.5737051275220786
prim_inf = 5.211830966800335e-12
prim_inf = 8.600157741511794e-8
prim_inf = 1.3422791766970477e-8
prim_inf = 1.4067521370009217e-7
prim_inf = -0.18755529976202112
prim_inf = 4.7837289685048745e-11
prim_inf = 5.302069894241868e-10
prim_inf = -1.3634804584479312
prim_inf = 2.281353772559669e-8
prim_inf = 1.1092674867541064e-7
prim_inf = 1.6200374375330284e-11
prim_inf = 1.5150482113313046e-7
prim_inf = 4.0223247310677834e-7
prim_inf = 9.750851859280374e-8
prim_inf = 4.939836344419746e-7
prim_inf = 3.4254458114446606e-7
prim_inf = 5.270791234579519e-7
prim_inf = 3.5228322303737514e-7
prim_inf = 1.6612830222584307e-8
prim_inf = 2.416163624729961e-8
prim_inf = 3.901795935234986e-7
prim_inf = 1.7117599782068282e-8
prim_inf = 5.0279822971788235e-8
prim_inf = 1.649914338486269e-8
prim_inf = 1.5063255887071136e-7
prim_inf = 2.1359028323786333e-7
prim_inf = 1.0437793207529467e-7
prim_inf = 1.4720171748194844e-8
prim_inf = -0.19769973288588183
prim_inf = 3.906928114361108e-10
prim_inf = 2.136165022648129e-9
prim_inf = 5.149740900378674e-7
prim_inf = 6.120691153910229e-8
prim_inf = -0.4984601131183368
prim_inf = -0.12185223829052205
prim_inf = -0.946593643354211
prim_inf = 1.0363621072428941e-10
prim_inf = 5.2304173436823476e-8
prim_inf = 4.951376695316867e-7
prim_inf = 3.5228322303737514e-7
prim_inf = 1.4733973330294248e-7
prim_inf = 5.17933813171112e-7
prim_inf = 1.6398189472965896e-9
prim_inf = 4.1584007703932e-7
prim_inf = 3.0822025109955575e-7
prim_inf = 1.682658421486849e-7
prim_inf = 3.190064035152318e-7
prim_inf = 1.7806542018661276e-7
prim_inf = 1.661305759625975e-8
prim_inf = 3.1800482247490436e-8
prim_inf = 5.019137461204082e-8
prim_inf = 8.828419595374726e-8
prim_inf = 5.028027771913912e-8
prim_inf = 1.6054309526225552e-7
prim_inf = 1.0219082469120622e-8
prim_inf = 2.4703786039026454e-7
prim_inf = 5.0009020924335346e-8
prim_inf = 1.659554982325062e-8
prim_inf = 8.791948680197947e-8
prim_inf = 5.135978220494053e-7
prim_inf = 2.220964745447418e-9
prim_inf = 4.2901135088868614e-8
prim_inf = 7.284383762851121e-9
prim_inf = 1.4067521370009217e-7
prim_inf = 1.8764012565952726e-10
prim_inf = 1.4067521370009217e-7
prim_inf = -0.3022198940870773
prim_inf = -1.3634804584479312
prim_inf = 4.951376695316867e-7
prim_inf = 1.1092674867541064e-7
prim_inf = 1.4732904674019665e-7
prim_inf = 1.5150470744629274e-7
prim_inf = -0.07668708181938655
prim_inf = 9.750840490596602e-8
prim_inf = 3.0822025109955575e-7
prim_inf = -0.025234309331722216
prim_inf = 3.5854520774591947e-7
prim_inf = 3.5228333672421286e-7
size(m.b_orig) = (786,)
size(m.A_orig) = (786,206)
size(m.final_soln) = (206,)
Constraint cones violations:
viol_lin = 0.0
viol_soc = 0.002770204097032547
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       2.63e+01
 - Status               =        Optimal
 - Best feasible obj.   =  +8.092500e+03
 - Final OA obj. bound  =  +8.092500e+03
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =             14
 - Feas. solution count =             10
 - Integer repeat count =             49

Timers (s):
 - Setup                =       4.54e-02
 -- Transform data      =       2.30e-04
 -- Create conic data   =       1.42e-04
 -- Create MIP data     =       2.35e-03
 -- Load/solve relax    =       7.73e-03
 - MIP-driven algorithm =       2.63e+01
 -- Solve conic model   =       6.19e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 8092.5
#OBJBOUND# 8092.5
#TIMESOLVER# 26.316776037216187
#TIMEALL# 26.318594932556152
#SOLUTION# [0.0,4.0,3.5,0.0,4.0,3.5,-0.0,7.5,4.0,3.5,5.5,0.0,-0.0,6.500000000000002,5.5,5.5,12.0,0.0,6.5,6.5,8092.5,50.323460378065306,50.323460378065306,46.323460378065306,53.823460378065306,50.323460378065306,78.75980776132694,73.25980776132694,78.75980776132694,78.75980776132694,85.25980776132694,0.0,0.0,1.0,0.0,-0.0,-0.0,0.0,1.0,-0.0,-0.0,0.0,1.0,-0.0,0.0,-0.0,-0.0,0.0,-0.0,0.0,0.0,0.0,0.0,-0.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,-0.0,0.0,-0.0,-0.0,1077.3795233559613,5149.4699477195,-0.0,1012.7325327672447,4324.3522896834775,-0.0,889.4387853144867,4936.4405472549915,-0.0,1430.6141430770135,4936.440059552967,0.0,950.085618772468,6203.106905382737,-0.0,14.484456567554616,3.09692335611145,1.0,10.090403835100489,17.979225334003104,1.0,26.796562270868264,0.33048073996762023,1.0,12.249537632357217,0.3155990084782988,1.0,17.443483207412555,76.73422998249157,1.0,317.6757362134058,1008.6852111888088,-0.0,286.23086361540675,695.060937159509,0.0,230.58710855302718,915.6557751613736,-0.0,520.9102147215747,915.6558886281055,-0.0,250.38189833151932,1502.3225638521417,-0.0,1077.379523355958,4324.352248032326,1012.732532775658,3691.753960370307,889.4387853172755,4523.88140808972,1430.6140222795439,4523.881181761813,950.0856203418516,5149.469317391092,6.714147177860752,25.49795100887809,10.090403969692105,85.38114889317603,26.796562270906065,7.508652906405793,8.890656810340852,7.5086535046805665,17.443483208700968,10.41254393487327,317.67573621340557,663.5676590413718,283.02881909003236,430.96958556451,219.73493318669216,743.0970829066205,520.9102147215747,743.0969917413163,250.38183208714509,1008.6852111888184,1430.6141430794428,5149.469947720233,1507.2607814809357,4324.352279786111,1077.379524080031,4936.440545927009,1585.9078769632793,4936.440059364985,1585.9079136643468,6203.107272938321,8.945243169451771,3.096923356026215,14.618849245953072,17.979225333998556,4.737324550269662,0.33913785512707384,24.836154664091623,0.6014526324330741,23.265770017508487,76.73422998249157,520.9102144204053,1008.6852111888102,567.5572224997202,663.5675237995338,317.67573958717753,915.6557751613736,616.2040900239876,915.6558886315388,616.2040866953444,1502.322563850078,1430.61414307932,4324.35224803222,1507.2610378763316,3691.7540761878154,1077.3795240797838,4523.881376872513,1585.9079883748818,4523.881181181867,1585.9079568035713,5149.469967205662,7.971928112101018,17.979225347058787,14.618849245290846,85.3811507547091,4.737324704955185,7.508652906405793,23.265770016489284,7.508652906405793,27.558393066615167,10.41254393487327,520.9102144204066,663.5676590413718,567.5572225027561,430.96958556453774,330.3805742258363,743.0970829066214,616.2040900239876,752.605314805817,616.204074493586,1008.6852111888193]
