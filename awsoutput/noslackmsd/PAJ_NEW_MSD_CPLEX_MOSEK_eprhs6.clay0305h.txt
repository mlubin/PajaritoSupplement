WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_eprhs6
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0305h.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |      120 |        3 |        3

Solving conic relaxation......Done     0.02s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000007

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Stall
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.014826042594449973
prim_inf = -0.007673586718738079
prim_inf = -0.00041332498722113087
prim_inf = -0.0002198114452767186
prim_inf = -0.015013263440778246
prim_inf = -0.008432715347225894
prim_inf = -0.015823036586880335
prim_inf = -0.007545904349171906
prim_inf = -0.01585899135170621
prim_inf = -0.009338442667285562
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.017422022525352077
prim_inf = -0.009452524911466753
prim_inf = -0.012519385988525755
prim_inf = -0.007068314989737701
prim_inf = -0.016246829623923986
prim_inf = -0.009198119486427458
prim_inf = -0.01721786222378796
prim_inf = -0.008480706409500272
prim_inf = -0.0004923473347844265
prim_inf = -0.00025808722148212837
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.014982031150339026
prim_inf = -0.007554926063676248
prim_inf = -0.00048715190087023075
prim_inf = -0.00025231673316739034
prim_inf = -0.010908584505159524
prim_inf = -0.006127425488557492
prim_inf = -0.01895077711878912
prim_inf = -0.008846988683217205
prim_inf = -0.015904351193057664
prim_inf = -0.00917821509483474
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.01767037190757037
prim_inf = -0.009239222115866141
prim_inf = -0.012818294236694783
prim_inf = -0.006870670279568003
prim_inf = -0.012164561386271089
prim_inf = -0.00688616213392379
prim_inf = -0.020356035176064324
prim_inf = -0.009758619519743661
prim_inf = -0.0005795011684313067
prim_inf = -0.00046368154562514974
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
size(m.b_orig) = (1216,)
size(m.A_orig) = (1216,396)
size(m.final_soln) = (396,)
Constraint cones violations:
viol_lin = 1.3848918456460524e-7
viol_soc = 0.0
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       8.15e+01
 - Status               =        Optimal
 - Best feasible obj.   =  +8.092500e+03
 - Final OA obj. bound  =  +8.092500e+03
 - Relative opt. gap    =      1.320e-10
 - Conic solve count    =             28
 - Feas. solution count =             25
 - Integer repeat count =             73

Timers (s):
 - Setup                =       5.67e-02
 -- Transform data      =       4.57e-04
 -- Create conic data   =       2.44e-04
 -- Create MIP data     =       3.33e-03
 -- Load/solve relax    =       1.70e-02
 - MIP-driven algorithm =       8.14e+01
 -- Solve conic model   =       2.49e-01

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 8092.500001068096
#OBJBOUND# 8092.499999999999
#TIMESOLVER# 81.4568121433258
#TIMEALL# 81.46099805831909
#SOLUTION# [1.4523572449872443e-10,4.000000000050734,3.5000000003035208,2.9987378408218468e-9,4.0000000002386145,3.500000000195421,3.4782583122430376e-9,7.500000000278278,4.000000002947326,3.4999999987547943,5.50000000071295,1.7450988090469393e-10,2.679670969744818e-10,6.500000000934719,5.500000000157467,5.500000000028767,12.00000000223693,3.564629787795395e-10,6.5000000016958674,6.500000001294447,8092.500001068096,49.97307346753774,49.973073453270764,53.973073467674894,46.47307346849303,49.97307346590386,81.23884171719455,86.73884184479333,81.23884170614667,81.2388417192471,74.73884181577773,-0.0,-0.0,49.97307346753774,-0.0,49.97307346753774,-0.0,-0.0,-0.0,-0.0,49.97307346753774,-0.0,-0.0,-0.0,-0.0,-0.0,49.97307346753774,-0.0,-0.0,49.973073453270764,-0.0,-0.0,-0.0,-0.0,49.973073453270764,-0.0,-0.0,-0.0,49.973073453270764,-0.0,-0.0,-0.0,49.973073453270764,53.973073467674894,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,53.973073467674894,-0.0,53.973073467674894,-0.0,-0.0,-0.0,-0.0,-0.0,53.973073467674894,-0.0,46.47307346849303,-0.0,-0.0,-0.0,-0.0,-0.0,46.47307346849303,-0.0,46.47307346849303,-0.0,-0.0,-0.0,-0.0,-0.0,46.47307346849303,-0.0,-0.0,-0.0,49.97307346590386,-0.0,-0.0,-0.0,49.97307346590386,-0.0,-0.0,-0.0,49.97307346590386,-0.0,-0.0,-0.0,49.97307346590386,-0.0,-0.0,81.23884171719455,-0.0,81.23884171719455,-0.0,-0.0,-0.0,-0.0,81.23884171719455,-0.0,-0.0,-0.0,-0.0,-0.0,81.23884171719455,-0.0,-0.0,86.73884184479333,-0.0,-0.0,-0.0,-0.0,86.73884184479333,-0.0,-0.0,-0.0,86.73884184479333,-0.0,-0.0,-0.0,86.73884184479333,81.23884170614667,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,81.23884170614667,-0.0,81.23884170614667,-0.0,-0.0,-0.0,-0.0,-0.0,81.23884170614667,-0.0,81.2388417192471,-0.0,-0.0,-0.0,-0.0,-0.0,81.2388417192471,-0.0,81.2388417192471,-0.0,-0.0,-0.0,-0.0,-0.0,81.2388417192471,-0.0,-0.0,-0.0,74.73884181577773,-0.0,-0.0,-0.0,74.73884181577773,-0.0,-0.0,-0.0,74.73884181577773,-0.0,-0.0,-0.0,74.73884181577773,0.0,1.0,0.0,0.0,0.0,-0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,-0.0,-0.0,0.0,0.0,-0.0,-0.0,-0.0,-0.0,1.0,1.0,1.0,-0.0,-0.0,1.0,0.0,0.0,-0.0,0.0,1.0,-0.0,0.0,-0.0,1.0,-0.0,49.97307346753774,-0.0,-0.0,49.973073453270764,-0.0,-0.0,53.973073467674894,-0.0,-0.0,46.47307346849303,-0.0,-0.0,49.97307346590386,-0.0,-0.0,81.23884171719455,-0.0,-0.0,86.73884184479333,-0.0,-0.0,81.23884170614667,-0.0,-0.0,81.2388417192471,-0.0,-0.0,74.73884181577773,-0.0,-0.0,-0.0,0.0,0.0,-0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,-0.0,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2515.966341936026,6625.172644028558,2497.8244836223525,7524.453774999649,2935.1330728572752,6627.698347121732,2176.977604677992,6624.74802004876,2517.276672738966,5612.103275725397,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2519.262026810542,6631.094399980068,2513.04518219637,7550.3142057815885,2936.9588520124175,6630.246881180843,2178.509732640536,6627.858085530633,2497.923240666621,5586.615522028938,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2516.164131390061,6624.7780208140975,2497.916746327974,7524.576098948258,2929.07411031695,6620.034339655336,2180.4162342545146,6629.077494599786,2517.3342445148032,5611.651516337259,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2519.5777670138727,6630.383796124485,2513.4233383826054,7549.565395402204,2930.9254159037546,6622.554826118076,2181.9647072000075,6632.114399907223,2498.032167575284,5587.1900462090425,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11,2.788429401301185e-11,2.788429401301184e-11]
