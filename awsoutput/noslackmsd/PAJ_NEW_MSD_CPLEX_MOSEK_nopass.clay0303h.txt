WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_nopass
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,false,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0303h.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       72 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000122

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Stall
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 3.0427924002651707e-7
prim_inf = 8.867856138294883e-8
prim_inf = -0.057504787930668044
prim_inf = 1.3926637620897964e-12
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 6.7298060457687825e-9
prim_inf = 4.147295840084553e-10
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 3.042813432330149e-7
prim_inf = 8.867907297371858e-8
prim_inf = 3.059562914131675e-7
prim_inf = -0.27662908305373435
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 3.410605131648481e-13
prim_inf = 1.3915268937125802e-10
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.014159464503393338
prim_inf = 8.867976930559962e-8
prim_inf = 3.0660049787911703e-7
prim_inf = 1.2500350976552e-7
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 2.2836343305243645e-7
prim_inf = 7.792232281644829e-8
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 2.0680431589426007e-8
prim_inf = 2.4870442416613514e-7
prim_inf = -0.15710318339330342
prim_inf = 1.3642420526593924e-12
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 2.2943515887163812e-7
prim_inf = 7.17468537914101e-8
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
size(m.b_orig) = (565,)
size(m.A_orig) = (565,172)
size(m.final_soln) = (172,)
Constraint cones violations:
viol_lin = 4.547473508864641e-13
viol_soc = 0.0004094389732927084
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       1.21e+00
 - Status               =        Optimal
 - Best feasible obj.   =  +2.835142e+04
 - Final OA obj. bound  =  +2.835142e+04
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =             11
 - Feas. solution count =              8
 - Integer repeat count =             25

Timers (s):
 - Setup                =       4.20e-02
 -- Transform data      =       2.14e-04
 -- Create conic data   =       1.42e-04
 -- Create MIP data     =       1.87e-03
 -- Load/solve relax    =       7.94e-03
 - MIP-driven algorithm =       1.17e+00
 -- Solve conic model   =       5.94e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 28351.419428989204
#OBJBOUND# 28351.419428989204
#TIMESOLVER# 1.2136847972869873
#TIMEALL# 1.22318696975708
#SOLUTION# [12.997743871248137,13.535541499763632,0.5377976285154951,40.20330841633323,36.20330841633323,4.0,28351.419428989204,29.854248339789258,16.85650446854112,16.318706840025627,50.00000027888311,9.796691862549881,13.796691862549881,0.0,0.0,0.0,29.854248339789258,0.0,0.0,0.0,29.854248339789258,0.0,-0.0,0.0,16.85650446854112,0.0,0.0,16.85650446854112,0.0,0.0,-0.0,0.0,16.318706840025627,0.0,0.0,16.318706840025627,0.0,-0.0,-0.0,0.0,50.00000027888311,-0.0,0.0,-0.0,50.00000027888311,-0.0,-0.0,0.0,9.796691862549881,0.0,0.0,9.796691862549881,0.0,-0.0,-0.0,0.0,13.796691862549881,-0.0,-0.0,13.796691862549881,-0.0,0.0,-0.0,0.0,-0.0,0.0,-0.0,1.0,1.0,0.0,-0.0,1.0,-0.0,0.0,0.0,29.854248339789258,16.85650446854112,0.0,0.0,16.318706840025627,0.0,0.0,0.0,0.0,50.00000027888311,9.796691862549881,0.0,0.0,13.796691862549881,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,284.1416995165986,95.97516714994221,274.2123810341749,190.34870635001877,0.0,0.0,0.0,0.0,0.0,0.0,891.2761409313964,2500.0000273699175,0.0,0.0,0.0,0.0,0.0,0.0,284.1416995162999,95.97516714991677,266.30015203961483,221.0410865198781,0.0,0.0,0.0,0.0,0.0,0.0,891.2761439336894,2500.000027714222,0.0,0.0,0.0,0.0,0.0,0.0,286.1748135648103,95.97516714988372,266.30015195351945,190.34869439052045,0.0,0.0,0.0,0.0,0.0,0.0,891.2760420521964,2499.999930446323,0.0,0.0,0.0,0.0,0.0,0.0,284.1417399495175,95.97515939067529,289.08029116931993,190.34870635001923,0.0,0.0,0.0,0.0,0.0,0.0,891.2760415740838,2499.999938168927,0.0,0.0,0.0,0.0]
