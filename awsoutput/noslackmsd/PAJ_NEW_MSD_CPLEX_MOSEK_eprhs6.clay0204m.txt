WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_eprhs6
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0204m.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       64 |        3 |        3

Solving conic relaxation......Done     0.00s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000004

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
prim_inf = -0.584341069030188
prim_inf = -0.11124104019654624
prim_inf = -0.7787108085958607
prim_inf = -0.18644662017595692
prim_inf = -0.46186562332127323
prim_inf = -0.12064804350939085
prim_inf = -0.7856970204338722
prim_inf = -0.15115989285732212
prim_inf = -1.2818230129527137
prim_inf = -1.3915200751070245
prim_inf = -1.003164964055948
prim_inf = -1.252018986483428
prim_inf = -1.8003924568904104
prim_inf = -1.840010807540633
prim_inf = -0.7354974716269425
prim_inf = -1.779614854314488
prim_inf = -0.5630106959388286
prim_inf = -0.12915376120417932
prim_inf = -0.7513659151611591
prim_inf = -0.2061409569805619
prim_inf = -0.45582623355744545
prim_inf = -0.13076032440858398
prim_inf = -0.7749499934661799
prim_inf = -0.16689400434734125
prim_inf = -1.2819730708817971
prim_inf = -1.3350595560571605
prim_inf = -0.34941444319855464
prim_inf = -0.10345965041534555
prim_inf = -1.8006396452124953
prim_inf = -1.8081174036686392
prim_inf = -0.7342025674148971
prim_inf = -1.740087368233329
prim_inf = -0.46753826854046565
prim_inf = -0.11669750982582627
prim_inf = -0.5840080939840391
prim_inf = -0.19337205973351956
prim_inf = -0.4011954557615809
prim_inf = -0.12272100210884673
prim_inf = -0.7278973550751289
prim_inf = -0.15323716410784982
prim_inf = -1.7820220615621025
prim_inf = -1.4546475300018287
prim_inf = -1.5300909282560973
prim_inf = -1.338988342538915
prim_inf = -0.9474552537395056
prim_inf = -1.8020269717897826
prim_inf = -1.287124539523731
prim_inf = -1.8230845300445893
prim_inf = -0.45954887709967807
prim_inf = -0.13883340826578205
prim_inf = -0.5701829391771298
prim_inf = -0.2198519392795788
prim_inf = -0.3998683397619516
prim_inf = -0.13360290115724638
prim_inf = -0.7195334333416668
prim_inf = -0.1703589331564217
prim_inf = -1.7828575939215092
prim_inf = -1.4003911963479645
prim_inf = -0.9904143670682632
prim_inf = -0.20312036700681801
prim_inf = -0.9475000290568332
prim_inf = -1.7644366503728612
prim_inf = -1.2867753603657235
prim_inf = -1.7894786522377615
size(m.b_orig) = (439,)
size(m.A_orig) = (439,117)
size(m.final_soln) = (117,)
Constraint cones violations:
viol_lin = 1.539035565656377e-11
viol_soc = 0.0
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       2.41e+00
 - Status               =        Optimal
 - Best feasible obj.   =  +6.545000e+03
 - Final OA obj. bound  =  +6.545000e+03
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =              9
 - Feas. solution count =              7
 - Integer repeat count =             73

Timers (s):
 - Setup                =       4.78e-02
 -- Transform data      =       1.62e-04
 -- Create conic data   =       9.39e-05
 -- Create MIP data     =       1.69e-03
 -- Load/solve relax    =       4.74e-03
 - MIP-driven algorithm =       2.36e+00
 -- Solve conic model   =       2.25e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 6545.000000160825
#OBJBOUND# 6545.000000160825
#TIMESOLVER# 2.4120779037475586
#TIMEALL# 2.413179874420166
#SOLUTION# [1.305776577512218e-10,4.0000000000254445,3.500000000015698,4.000000000099609,3.4999999999119584,7.5000000000472555,5.50000000004016,1.484778180539072e-10,2.8070292599416814e-10,5.499999999978404,5.499999999818376,2.7163748408269415e-10,6545.000000160825,49.08282158285951,49.08282158275184,53.08282158286684,45.58282158285871,79.93337063471513,74.43337063470099,79.93337063462454,79.93337063447964,0.0,1.0,-0.0,-0.0,-0.0,0.0,0.0,0.0,1.0,-0.0,0.0,1.0,0.0,0.0,-0.0,1.0,1.0,0.0,1.0,0.0,0.0,-0.0,-0.0,0.0,1409.494058522215,5632.618234749454,0.0,1532.0642159460301,4940.7540876278645,0.0,1740.3946730613095,5430.36455479793,0.0,1441.7849022724213,5519.997416876753,0.0,33.159659796031235,28.978248673879495,1.0,39.648411127200184,25.771609432740192,1.0,26.002696105552644,26.603632461588784,1.0,46.78255826711333,19.534905937747588,1.0,1388.5654909221269,4789.422474522384,1498.5071008311968,4276.629047367409,1733.5857308019695,5010.79383576748,1429.1345924786654,5109.582000280515,33.166530804125195,28.953418385628066,23.816577937604915,68.67195119972753,26.033944467882197,26.485613416868336,46.73442870545648,19.755832745065586,1746.8389958615946,5648.940118828981,1995.3153825282423,4959.696839076297,1960.1647097981192,5436.361927392972,1568.5937186794058,5526.207360473038,23.877962656435137,32.28366119439926,29.15763343256957,29.123502683722453,40.381301599391875,21.656885078891193,33.40414664104845,24.137904281938035,1737.7764126513896,4814.336043261895,1976.0182349922004,4309.574383239232,1958.5384926708564,5018.426741379107,1558.3459650409422,5119.259974197679,23.96683086522633,32.068032783849915,13.710465227484084,72.52767946530756,40.383021729889315,21.72015913679007,33.387933187090496,24.211401460380223]
