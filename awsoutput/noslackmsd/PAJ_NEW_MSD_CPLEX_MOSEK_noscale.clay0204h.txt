WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_noscale
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,false,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0204h.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       64 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000000

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.01834244489464254
prim_inf = -0.010146360585167713
prim_inf = -0.012343883295670821
prim_inf = -0.006750517398359079
prim_inf = -0.012778675466961431
prim_inf = -0.006208288442394405
prim_inf = -0.01845501917978254
prim_inf = -0.00942911190668383
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.008976623593298427
prim_inf = -0.005406138575381192
prim_inf = -0.01612475890215137
prim_inf = -0.008461237981464365
prim_inf = -0.007686860296644227
prim_inf = -0.0035447386535452097
prim_inf = -0.013970195779165806
prim_inf = -0.007374541455646977
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.020513250630756374
prim_inf = -0.010873240534237993
prim_inf = -0.01461812212028235
prim_inf = -0.00834139279777446
prim_inf = -0.01981899361817341
prim_inf = -0.009385979383296217
prim_inf = -0.016409127758834074
prim_inf = -0.008419653839155217
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.010734506679909828
prim_inf = -0.00661842125646217
prim_inf = -0.018208418072845234
prim_inf = -0.010196688206633553
prim_inf = -0.014370035062256648
prim_inf = -0.007117272367395344
prim_inf = -0.011932184107990906
prim_inf = -0.0063256288804041105
size(m.b_orig) = (695,)
size(m.A_orig) = (695,229)
size(m.final_soln) = (229,)
Constraint cones violations:
viol_lin = 2.3123476466935244e-9
viol_soc = 0.0
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       5.21e+00
 - Status               =        Optimal
 - Best feasible obj.   =  +6.545000e+03
 - Final OA obj. bound  =  +6.545000e+03
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =             15
 - Feas. solution count =             14
 - Integer repeat count =             63

Timers (s):
 - Setup                =       4.57e-02
 -- Transform data      =       2.91e-04
 -- Create conic data   =       1.73e-04
 -- Create MIP data     =       2.40e-03
 -- Load/solve relax    =       9.16e-03
 - MIP-driven algorithm =       5.16e+00
 -- Solve conic model   =       7.21e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 6545.000000014347
#OBJBOUND# 6545.000000014347
#TIMESOLVER# 5.2105817794799805
#TIMEALL# 5.213135004043579
#SOLUTION# [1.5816354520685821e-12,4.000000000009865,3.5000000000028555,3.9999999999999143,3.5000000000171854,7.500000000010364,5.500000000003508,1.4741038780272552e-12,1.4966665145881612e-12,5.5000000000312905,5.500000000012226,3.412984795387596e-12,6545.000000014347,49.086480182177134,49.086480182165005,45.086480182171876,52.586480182179315,76.31667614002211,81.81667614004772,76.31667614002819,76.31667614002731,-0.0,-0.0,49.086480182177134,-0.0,-0.0,49.086480182168465,-0.0,-0.0,49.086480182177134,-0.0,-0.0,-0.0,-0.0,-0.0,49.086480182165005,-0.0,-0.0,-0.0,-0.0,49.086480182165005,-0.0,-0.0,-0.0,49.086480182165005,-0.0,45.086480182171876,-0.0,-0.0,-0.0,-0.0,-0.0,45.086480182171876,45.086480182171876,-0.0,-0.0,-0.0,52.586480182179315,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,52.586480182179315,52.586480182179315,-0.0,-0.0,-0.0,-0.0,-0.0,76.31667614002211,-0.0,-0.0,76.31667614002211,-0.0,-0.0,76.31667614002211,-0.0,-0.0,-0.0,-0.0,-0.0,81.81667614002924,-0.0,-0.0,-0.0,-0.0,81.81667614004951,-0.0,-0.0,-0.0,81.8166761400323,-0.0,76.31667614002819,-0.0,-0.0,-0.0,-0.0,-0.0,76.31667614002819,76.31667614002819,-0.0,-0.0,-0.0,76.31667614002731,-0.0,-0.0,-0.0,-0.0,-0.0,-0.0,76.31667614002731,76.31667614002731,-0.0,-0.0,-0.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,-0.0,49.08648018210999,-0.0,49.08648018186153,-0.0,45.086480182076556,-0.0,52.586480180711526,-0.0,76.31667613968169,-0.0,81.81667613773537,-0.0,76.31667613996598,-0.0,76.31667613998118,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,4.623790552101827e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,2431.794148865432,5853.938188305075,2424.4522482973425,6716.6422633228785,2045.868790383176,5842.3737221896845,2791.101960264051,5851.828522381206,4.623790542198356e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,2420.350291601286,5840.023741585966,2429.074655610516,6722.412673669901,2040.637571832264,5834.577853101613,2784.796913143561,5845.793754921263,4.623790542198356e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,4.623790542198356e-13,4.623790552101827e-13,2434.4620532199388,5856.077734973116,2427.2305687167304,6722.008102514334,2053.146151746642,5851.701703793202,2788.222182048299,5848.8619456270935,4.623790552101827e-13,4.623790552101827e-13,4.623790552101827e-13,4.623790552101827e-13,4.623790552101827e-13,4.623790552101827e-13,4.623790552101827e-13,4.623790552101827e-13,2422.489992618179,5843.575979006479,2431.629622347398,6728.276636091566,2047.5092182297208,5845.038970198568,2781.941145255423,5842.717641593419]
