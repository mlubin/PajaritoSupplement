WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_noscale
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,false,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0204m.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       64 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000004

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
prim_inf = -0.7043053834872808
prim_inf = -0.17525033591937245
prim_inf = -0.5338841291695644
prim_inf = -0.0962121897164252
prim_inf = -0.9089331470979687
prim_inf = -0.21875391402045352
prim_inf = -0.5833192226591564
prim_inf = -0.18975397196572885
prim_inf = -1.3290034315578225
prim_inf = -1.9665703861601074
prim_inf = -0.8798053146055764
prim_inf = -0.8814968377230343
prim_inf = -0.49224493599479047
prim_inf = -1.501782282991357
prim_inf = -1.7861625394937946
prim_inf = -1.6693059475870058
prim_inf = -0.6827764132860921
prim_inf = -0.20236794205993647
prim_inf = -0.5164857022839442
prim_inf = -0.11517537547751999
prim_inf = -0.8958155128548242
prim_inf = -0.23874258390242176
prim_inf = -0.578311820885574
prim_inf = -0.20574458986902755
prim_inf = -0.99429540524374
prim_inf = -0.404614410124168
prim_inf = -1.0198564897629012
prim_inf = -1.9667402931776081
prim_inf = -0.31809608338763695
prim_inf = -0.5006823471917912
prim_inf = -1.7227614737626098
prim_inf = -0.8187316133656921
prim_inf = -0.5775023436815445
prim_inf = -0.1769648365361718
prim_inf = -0.3940738524142944
prim_inf = -0.09804797691776912
prim_inf = -0.8185566758365894
prim_inf = -0.22026661039217288
prim_inf = -0.5365859509740858
prim_inf = -0.1896731274382546
prim_inf = -1.7963800579866316
prim_inf = -1.9697036359369733
prim_inf = -1.445732780930662
prim_inf = -0.9589383850312032
prim_inf = -1.2980017051332027
prim_inf = -1.642173844761622
prim_inf = -1.2064537806757443
prim_inf = -1.6335959971345027
prim_inf = -0.5662531422603934
prim_inf = -0.2087896295806786
prim_inf = -0.38712786027349466
prim_inf = -0.12276950289378874
prim_inf = -0.8081800228926568
prim_inf = -0.24230162801995903
prim_inf = -0.5340624244620358
prim_inf = -0.2066090281750803
prim_inf = -1.6491307787025473
prim_inf = -0.46733460986945374
prim_inf = -1.5310282582151444
prim_inf = -1.9705664099900204
prim_inf = -1.1418728533426084
prim_inf = -0.7642500311103433
prim_inf = -1.0366982400842595
prim_inf = -0.7415684731251417
size(m.b_orig) = (439,)
size(m.A_orig) = (439,117)
size(m.final_soln) = (117,)
Constraint cones violations:
viol_lin = 1.8730048623183393e-9
viol_soc = 0.0
viol_rot = 0.0
Variable cones violations:
viol_lin = 0.0
viol_soc = 0.0
viol_rot = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       1.08e+00
 - Status               =        Optimal
 - Best feasible obj.   =  +6.545000e+03
 - Final OA obj. bound  =  +6.545000e+03
 - Relative opt. gap    =      5.412e-09
 - Conic solve count    =              6
 - Feas. solution count =              4
 - Integer repeat count =             59

Timers (s):
 - Setup                =       3.79e-02
 -- Transform data      =       1.55e-04
 -- Create conic data   =       9.73e-05
 -- Create MIP data     =       1.72e-03
 -- Load/solve relax    =       5.12e-03
 - MIP-driven algorithm =       1.04e+00
 -- Solve conic model   =       1.39e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 6545.000035421063
#OBJBOUND# 6545.0
#TIMESOLVER# 1.0795049667358398
#TIMEALL# 1.0805909633636475
#SOLUTION# [1.5145138815577825e-8,4.000000008996956,3.5000000095804085,4.00000002804919,3.500000014453786,7.500000017949574,5.500000009699733,1.2515547247142326e-8,9.490124043833866e-9,5.500000032646912,5.500000027180841,3.609197226254241e-8,6545.000035421063,49.148459649335685,49.14845964980936,45.14845964751403,52.64845965036161,76.40966656266816,81.9096665652901,76.4096665566207,76.40966655130504,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,-0.0,-0.0,-0.0,1.0,0.0,0.0,0.0,-0.0,0.0,0.0,0.0,0.0,1.0,1.0,-0.0,1546.4340541068068,5280.485158236627,0.0,1281.650081821482,5816.661121946569,0.0,1504.9163388999943,5178.195491088716,0.0,1896.42749518788,5095.228620897848,0.0,34.14551562978378,21.832677525345527,1.0,34.248139147319456,35.210715769606075,1.0,53.758879032173816,18.291391028753264,1.0,26.3088265974131,27.260855046977635,1.0,1521.153812579284,4473.525871553367,1266.613518768766,5112.153164140152,1487.0368785853684,4784.502135540364,1889.7465129813231,4696.496471569779,22.835362682843687,54.649953079304076,39.14897083723942,21.93927129132068,48.13094994500015,34.814723866287736,20.464855446911173,44.279996583030425,1888.670905902435,5285.452044125202,1765.4170828594415,5822.27630539588,1696.0047886338332,5182.597396578722,2041.663801430471,5095.001044947354,27.58928117280176,23.990488171363054,26.033179810934264,37.8358733427545,32.65142255780222,25.243526928752512,34.15201710863652,24.667486815069985,1873.8490038646423,4489.5668052489955,1757.8115165144784,5132.837375905724,1681.2367951173069,4794.191486951314,2038.1483956999236,4698.760627980785,16.314206831478277,56.90943632130764,30.67920781978698,24.66527358457426,26.750792822302802,42.31859309909099,28.155084303586396,41.55140323019248]
