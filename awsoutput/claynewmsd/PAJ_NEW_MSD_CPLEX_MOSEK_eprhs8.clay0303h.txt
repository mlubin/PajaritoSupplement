WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_eprhs8
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-8),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0303h.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       72 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000122

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
doing incumbent cb
checked feas: accepting
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 2.0781499188160524e-8
prim_inf = 2.440992830088362e-8
prim_inf = -0.004080907443039905
prim_inf = -0.0018168873539252672
prim_inf = -0.0008418591594363534
prim_inf = -0.00029023885781498393
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.0017582082505214203
prim_inf = -0.00073201087070629
prim_inf = 2.160368239856325e-8
prim_inf = 4.603862180374563e-8
prim_inf = -0.0008318515872360877
prim_inf = -0.0002914608480750758
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.0007229913617265993
prim_inf = -0.000296801156764559
prim_inf = -0.004324773792632186
prim_inf = -0.0019489231217448832
prim_inf = 2.0319248505984433e-8
prim_inf = 2.280512489960529e-8
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = -0.0024239791737272753
prim_inf = -0.001038101641825051
prim_inf = -0.00033934267275981256
prim_inf = -0.00014073929469304858
prim_inf = -7.376809207926271e-8
prim_inf = -7.571543392259628e-9
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0
prim_inf = 0.0

Pajarito MICP solve summary:
 - Total time (s)       =       8.66e-01
 - Status               =        Optimal
 - Best feasible obj.   =  +2.666909e+04
 - Final OA obj. bound  =  +2.666909e+04
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =             10
 - Feas. solution count =              6
 - Integer repeat count =             22

Timers (s):
 - Setup                =       1.72e-02
 -- Transform data      =       2.04e-04
 -- Create conic data   =       1.22e-04
 -- Create MIP data     =       4.49e-03
 -- Load/solve relax    =       8.45e-03
 - MIP-driven algorithm =       8.49e-01
 -- Solve conic model   =       5.37e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 26669.09233557517
#OBJBOUND# 26669.09233557517
#TIMESOLVER# 0.8661930561065674
#TIMEALL# 0.8681089878082275
#SOLUTION# [19.610252054993417,19.61026365663624,1.5754169508184455e-5,30.81398432795903,26.81398403127423,4.000004001739732,26669.09233557517,30.14574560646647,49.7559965513851,49.75600789286121,50.000013332628534,80.81399656800106,76.81399601716997,-0.0,-0.0,30.14574560646647,-0.0,-0.0,-0.0,30.14574560646647,-0.0,-0.0,-0.0,49.7559965513851,-0.0,-0.0,-0.0,-0.0,49.7559965513851,-0.0,-0.0,49.75600789286121,-0.0,-0.0,-0.0,-0.0,49.75600789286121,-0.0,-0.0,50.000013332628534,-0.0,-0.0,-0.0,50.000013332628534,-0.0,-0.0,-0.0,80.81399656800106,-0.0,-0.0,-0.0,-0.0,80.81399656800106,-0.0,-0.0,76.81399601716997,-0.0,-0.0,-0.0,-0.0,76.81399601716997,0.0,-0.0,-0.0,-0.0,1.0,1.0,-0.0,-0.0,-0.0,-0.0,0.0,1.0,-0.0,-0.0,30.14574560646647,-0.0,49.7559965513851,-0.0,-0.0,49.75600789286121,-0.0,-0.0,-0.0,50.000013332628534,-0.0,80.81399656800106,-0.0,-0.0,76.81399601716997,-0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,3.3861329735286045e-8,3.386132973528575e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,2475.6591670871358,6530.9019615733505,2480.724160570483,5905.755938382745,909.1490866651401,2500.364329804713,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,2477.8383490674373,6533.293628142363,2475.6602946817825,5900.3898482780605,909.1445305829926,2500.365858349085,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,2476.554818056792,6531.871523184333,2481.02742032874,5906.14627014974,908.7659689269246,2500.0013047451725,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735285496e-8,3.38613297352857e-8,3.3861329735286045e-8,3.386132973528575e-8,3.3861329735286045e-8,3.386132973528575e-8,3.3861329735286045e-8,3.386132973528575e-8,3.3861329735286045e-8,3.386132973528575e-8,2478.664518928723,6534.29419083787,2476.080610983444,5900.805292076632,908.766011725652,2500.0013427313756,3.3861329735286045e-8,3.386132973528575e-8,3.3861329735286045e-8,3.386132973528575e-8]
