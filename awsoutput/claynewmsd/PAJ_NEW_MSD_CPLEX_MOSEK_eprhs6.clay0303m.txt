WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_eprhs6
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,true,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0303m.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.00s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |       72 |        3 |        3

Solving conic relaxation......Done     0.00s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.000000

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Infeasible
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
prim_inf = -1.7641297443478834
prim_inf = -0.8247689787272066
prim_inf = -0.18635793108433063
prim_inf = -0.03251842905774538
prim_inf = -0.45634982579190364
prim_inf = -0.1154129302540241
prim_inf = -1.4691085882866446
prim_inf = -1.3261082603808063
prim_inf = 1.9356372504830688e-8
prim_inf = -6.25182874358643e-8
prim_inf = -1.120493871516917
prim_inf = -1.1480287262440036
prim_inf = -0.10491885316892446
prim_inf = -0.05289932177098855
prim_inf = -0.8432382970559047
prim_inf = -0.2665114208657542
prim_inf = -0.9540177731254289
prim_inf = -0.5369216653612057
prim_inf = -1.7450700527147092
prim_inf = -0.9550374923660456
prim_inf = -0.18459202419808207
prim_inf = -0.03634345707905595
prim_inf = -0.45575519915905716
prim_inf = -0.12802035196637007
prim_inf = -1.4923813342720678
prim_inf = -1.1416005290548128
prim_inf = -0.208101959327621
prim_inf = -0.7265499486745721
prim_inf = 4.396398978201432e-8
prim_inf = 4.98687597882963e-8
prim_inf = -0.09841897157328017
prim_inf = -0.06578609327317686
prim_inf = -1.1766949186692273
prim_inf = -0.6306233129616885
prim_inf = -1.1038606379300973
prim_inf = -0.7788618235101694
prim_inf = -1.6067830981482984
prim_inf = -0.8180624335600442
prim_inf = -0.12841221119765578
prim_inf = -0.03307552642945666
prim_inf = -0.39559241471170026
prim_inf = -0.11400010442230268
prim_inf = -1.6263615991369988
prim_inf = -1.3229278361191064
prim_inf = -0.11877319057147595
prim_inf = -0.12245385387809016
prim_inf = -1.5026204217981345
prim_inf = -1.159793285021415
prim_inf = -2.0673408762661438e-8
prim_inf = -3.686428584614987e-8
prim_inf = -0.47030714672166596
prim_inf = -0.24106661499558868
prim_inf = -0.8125769508537815
prim_inf = -0.5464320047665296
prim_inf = -1.581423425141793
prim_inf = -0.9701131373326461
prim_inf = -0.1345570437695187
prim_inf = -0.0382474490261302
prim_inf = -0.40018408720834486
prim_inf = -0.12778597315718798
prim_inf = -1.651199153551488
prim_inf = -1.1513688128402464
prim_inf = -0.3672823364112734
prim_inf = -0.9042967996066658
prim_inf = -0.2677591895927449
prim_inf = -0.029562419997688494
prim_inf = -3.4926526648604295e-7
prim_inf = -2.4499950868062115e-7
prim_inf = -0.7904808090918323
prim_inf = -0.605333727693278
prim_inf = -0.9594082688814751
prim_inf = -0.7858626817262575

Pajarito MICP solve summary:
 - Total time (s)       =       8.87e-01
 - Status               =        Optimal
 - Best feasible obj.   =  +2.666911e+04
 - Final OA obj. bound  =  +2.666911e+04
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =              9
 - Feas. solution count =              7
 - Integer repeat count =             30

Timers (s):
 - Setup                =       1.22e-02
 -- Transform data      =       1.28e-04
 -- Create conic data   =       9.40e-05
 -- Create MIP data     =       3.70e-03
 -- Load/solve relax    =       4.82e-03
 - MIP-driven algorithm =       8.74e-01
 -- Solve conic model   =       2.47e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 26669.109738759336
#OBJBOUND# 26669.109738759336
#TIMESOLVER# 0.8865649700164795
#TIMEALL# 0.8875219821929932
#SOLUTION# [19.610271895604484,19.61027237812509,5.964474253669383e-7,30.814005041833635,26.814005031468337,4.0000001958073765,26669.109738759336,30.145750703062273,49.75602256181958,49.7560230405312,50.00000047059006,80.81400547028008,76.81400545400786,1.0,-0.0,0.0,0.0,-0.0,0.0,-0.0,1.0,0.0,0.0,-0.0,1.0,1356.8394780006176,3147.0278277538646,0.0,1077.4159463725287,5463.796431267559,0.0,1433.147481309179,4952.658110115343,-0.0,1883.275693985594,2164.2152442795723,0.0,14.017366912263167,10.98263263161313,1.0,7.476527645260206,7.246956741997021,1.0,5.901802354616697,9.270966828561232,1.0,457.31480442224836,1280.583526721752,0.0,637.7390362773407,1096.1536036435782,0.0,1255.4525680656168,2620.667285982299,1076.3671162253943,4753.194953296917,1432.5954243384497,4557.719658759461,1969.5960197533007,2537.8509496610654,15.74932402471301,4.8276472538576245,3.041455546318795,21.958544312611064,5.8785585056571,9.33899631180246,642.5332972056422,1171.188035516026,744.3701161122348,1049.9002634492645,1584.5222826152853,3129.169962371567,1564.0018113909334,5465.344231143339,1638.8078585989279,4948.947349530395,1612.906412997064,2154.050758228711,11.330417679834953,11.760148180865109,7.094931652087197,7.346273436316048,6.9999968654481135,9.000003007862068,707.3608804626042,1262.0477557202755,761.4131020528775,1103.3284669139473,1488.559194600642,2659.0295714065346,1569.1565474941435,4757.8091325391,1643.513171011156,4557.148977580411,1727.713430995199,2567.0615393181097,13.1701888849438,5.6407388013373785,1.9553282858410497,22.302769530889844,6.999998179815228,8.999998401457194,894.7052926324682,1149.9438701965648,868.8673762407724,1055.9553664641628]
