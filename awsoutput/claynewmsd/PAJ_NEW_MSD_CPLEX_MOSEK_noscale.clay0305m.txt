WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module ConicBenchmarkUtilities at /home/ubuntu/.julia/v0.5/Requires/src/require.jl:12.
#SOLVERNAME# PAJ_NEW_MSD_CPLEX_MOSEK_noscale
#SOLVER# Pajarito.PajaritoSolver(2,3600.0,1.0e-5,true,CPLEX.CplexSolver(Any[(:CPX_PARAM_THREADS,1),(:CPX_PARAM_TILIM,3600.0),(:CPX_PARAM_EPINT,1.0e-8),(:CPX_PARAM_EPRHS,1.0e-6),(:CPX_PARAM_SCRIND,0),(:CPX_PARAM_EPGAP,1.0e-5)]),CPLEX.CplexSolver(Any[]),0,false,true,Mosek.MosekMathProgSolverInterface.MosekSolver(Any[(:LOG,0),(:NUM_THREADS,1),(:OPTIMIZER_MAX_TIME,120.0)]),true,false,false,true,false,true,false,true,true,true,true,false,true,true,false,false,false,false,true,true,false,true,true,1.0e-10,1.0e-6,0.01,0.0001)
#INSTANCE# clay0305m.cbf.gz
#TIMELIMIT# 3600.0

Transforming original data......Done     0.00s

Creating conic model data......Done     0.00s

Creating MIP model......Done     0.01s

Cone types summary:
Cone       | Count    | Min dim  | Max dim 
       SOC |      120 |        3 |        3

Solving conic relaxation......Done     0.01s
 - Relaxation status    =        Optimal
 - Relaxation objective =       0.001371

Creating conic subproblem model......Done

Starting MIP-solver-driven outer approximation algorithm
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Infeasible
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
doing lazy cb
new int solution in lazy
conic status Optimal
violating dual cuts added in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
adding new sol
doing incumbent cb
checked feas: accepting
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing incumbent cb
checked feas: rejecting
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
new int solution in lazy
conic status Optimal
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
repeat int solution in lazy
viol cuts added on infeas solution in lazy
doing lazy cb
feasible solution in lazy
doing incumbent cb
checked feas: accepting
adding new sol
prim_inf = 2.2391259335563518e-7
prim_inf = 6.956815923331305e-8
prim_inf = 3.459024355834117e-7
prim_inf = 5.17138687428087e-9
prim_inf = 1.3603971638076473e-7
prim_inf = 1.9450180843705311e-7
prim_inf = 2.5650581392255845e-7
prim_inf = 5.872034307685681e-7
prim_inf = 4.248225877745426e-7
prim_inf = 9.94067704596091e-7
prim_inf = 2.596094699214291e-7
prim_inf = 1.7892914705441854e-7
prim_inf = 1.4534198200522042e-7
prim_inf = 2.5651431201367814e-8
prim_inf = -0.3133058472585075
prim_inf = -0.6626192355616916
prim_inf = 9.689168578574936e-8
prim_inf = -1.355009093693619
prim_inf = 6.391297198149459e-7
prim_inf = 8.197095837658708e-7
prim_inf = 3.1953413781593554e-7
prim_inf = 5.3515805120696314e-8
prim_inf = 1.5180160062300274e-7
prim_inf = -0.03809108891221058
prim_inf = 2.7469809538160916e-8
prim_inf = 8.13804490462644e-9
prim_inf = 1.122845105783199e-7
prim_inf = 2.260821929667145e-8
prim_inf = 1.7924188000506547e-7
prim_inf = 8.67808466864517e-7
prim_inf = 2.2395147425413597e-7
prim_inf = 6.140908226370811e-8
prim_inf = 3.458981154835783e-7
prim_inf = -0.020592516570104635
prim_inf = 8.138410976243904e-7
prim_inf = 8.979159247246571e-7
prim_inf = 2.423852265565074e-7
prim_inf = 6.954378477530554e-7
prim_inf = 4.2486999518587254e-7
prim_inf = 2.1008327166782692e-7
prim_inf = -0.899430687893684
prim_inf = 6.831140453300577e-8
prim_inf = 6.989931353729162e-7
prim_inf = 6.771551142037424e-7
prim_inf = -0.5321781527402099
prim_inf = 3.277385811628619e-7
prim_inf = 9.735794748166882e-8
prim_inf = 4.2031200919723233e-7
prim_inf = -0.6295849998776006
prim_inf = -1.7646402991899208
prim_inf = 3.195381168552558e-7
prim_inf = 2.430032282063621e-7
prim_inf = 1.5180154377958388e-7
prim_inf = 3.878548113789293e-7
prim_inf = 2.7627834242593963e-8
prim_inf = 2.1169125830056146e-7
prim_inf = 1.1228453900002933e-7
prim_inf = 3.280342752987053e-8
prim_inf = 1.7924185158335604e-7
prim_inf = 2.4495466277585365e-7
prim_inf = 6.56421661915374e-7
prim_inf = 4.628236638382077e-8
prim_inf = 1.5580985746055376e-7
prim_inf = 3.033528628293425e-7
prim_inf = 6.121783826529281e-7
prim_inf = 2.333317752345465e-7
prim_inf = 2.8083559300284833e-7
prim_inf = 5.872043402632698e-7
prim_inf = 1.461080501030665e-7
prim_inf = 9.933901310432702e-7
prim_inf = 5.209141820117225e-7
prim_inf = -0.787869158421004
prim_inf = 2.1912843450877517e-7
prim_inf = 2.485755601355777e-9
prim_inf = 9.16696571096054e-7
prim_inf = -1.8337771738894315
prim_inf = 2.4761375350124126e-7
prim_inf = -1.7312795663239084
prim_inf = 1.3336561366372734e-7
prim_inf = 8.195901699536989e-7
prim_inf = 1.1032898328267038e-7
prim_inf = 5.346930720406817e-8
prim_inf = 6.16320221524802e-8
prim_inf = -0.2793577907109466
prim_inf = 6.728172365910723e-7
prim_inf = -0.1869535523489958
prim_inf = 7.091034603945445e-8
prim_inf = -0.042609498183082906
prim_inf = 5.570143457589438e-8
prim_inf = 8.622396308055613e-7
prim_inf = 6.564214345416985e-7
prim_inf = 2.7082023734692484e-8
prim_inf = 3.0676824280817527e-7
prim_inf = 6.376012606779113e-8
prim_inf = 6.121692877059104e-7
prim_inf = 1.545231498312205e-9
prim_inf = 1.926309778355062e-7
prim_inf = 6.954396667424589e-7
prim_inf = 1.9425124264671467e-7
prim_inf = 2.0748484530486166e-7
prim_inf = -0.5850248531518147
prim_inf = 4.823132115916451e-9
prim_inf = 2.191284398378457e-7
prim_inf = -0.09800083582149455
prim_inf = 9.166961874029766e-7
prim_inf = 9.385026267239027e-8
prim_inf = -1.5813741630476628
prim_inf = -0.28115556707297706
prim_inf = 1.3338088322711883e-7
prim_inf = -1.832631304622943
prim_inf = 1.1042374126191135e-7
prim_inf = 2.4300391032738844e-7
prim_inf = 6.176207989483373e-8
prim_inf = 1.3416808997135377e-7
prim_inf = 6.35283413430443e-7
prim_inf = 2.126565732396557e-7
prim_inf = 7.091034603945445e-8
prim_inf = -0.2750168172899521
prim_inf = 5.5705868362565525e-8
prim_inf = 2.393289832980372e-8

Pajarito MICP solve summary:
 - Total time (s)       =       4.12e+01
 - Status               =        Optimal
 - Best feasible obj.   =  +8.092500e+03
 - Final OA obj. bound  =  +8.092500e+03
 - Relative opt. gap    =      0.000e+00
 - Conic solve count    =             18
 - Feas. solution count =             16
 - Integer repeat count =            104

Timers (s):
 - Setup                =       2.06e-02
 -- Transform data      =       2.14e-04
 -- Create conic data   =       1.27e-04
 -- Create MIP data     =       6.41e-03
 -- Load/solve relax    =       8.76e-03
 - MIP-driven algorithm =       4.12e+01
 -- Solve conic model   =       8.32e-02

WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
WARNING: For the MIP-solver-driven algorithm, optimality tolerance must be specified as MIP solver option, not Pajarito option
#STATUS# Optimal
#OBJVAL# 8092.500000000001
#OBJBOUND# 8092.500000000001
#TIMESOLVER# 41.17541003227234
#TIMEALL# 41.17783999443054
#SOLUTION# [0.0,4.000000000000003,3.5,0.0,4.0,3.5,0.0,7.5,4.0,3.5,5.5,0.0,0.0,6.500000000000002,5.5,5.5,12.0,0.0,6.5,6.5,8092.500000000001,49.846130391902776,49.846130391902776,53.846130391902776,46.346130391902776,49.846130391902776,78.81275835608204,73.31275835608204,78.81275835608204,78.81275835608204,85.31275835608204,0.0,1.0,0.0,-0.0,-0.0,-0.0,0.0,-0.0,0.0,-0.0,-0.0,0.0,1.0,-0.0,-0.0,-0.0,-0.0,1.0,0.0,-0.0,-0.0,0.0,0.0,1.0,1.0,1.0,1.0,-0.0,1.0,1.0,1.0,0.0,0.0,0.0,-0.0,-0.0,-0.0,0.0,-0.0,0.0,1046.2720340812255,5157.072083290261,-0.0,982.5797204348714,4331.319151234637,-0.0,1394.7333603113955,4943.883506745867,-0.0,920.8875115276137,4943.882535814552,-0.0,920.8874339430836,6211.44779189704,-0.0,7.043022852759648,3.2860924740918254,1.0,13.350762070092458,17.532992346861874,1.0,6.683417490712543,0.47759225007251715,1.0,21.658501231460832,0.9808197977836244,1.0,21.658495088312122,77.6646776015989,1.0,300.8881913411017,1012.0515671153044,0.0,267.1959584327981,679.2539378311212,-0.0,499.34953661966597,918.8633154112674,0.0,235.50370472742907,918.8633087559892,0.0,235.50369680959898,1506.4295571275998,-0.0,1046.2720340608998,4331.319029413288,982.5797204370188,3736.675545666489,1394.7328872965963,4531.005402824228,920.8875180364416,4531.00586163896,920.8874339212325,5157.071720896272,13.248589198248453,17.532991951553413,13.350758097435744,84.4053801073951,7.766083474308317,7.22126630559378,21.65850122617843,7.2212659250584394,31.923469181435337,28.806326223998866,300.8881913404982,666.2984128716266,267.1959584328122,433.17082619103985,499.34953658013933,745.9866899524318,235.5037047274286,745.9867567658521,235.5036968096008,1012.0514701466172,1394.7329971543668,5157.072143346445,1470.4256014015905,4331.318505325359,1627.809739039431,4943.883410741371,1046.2720042743913,4943.882535812002,1548.1178636473264,6211.447794003064,5.504326121711942,5.815944720070547,11.196587263305872,17.5329925615265,28.581096608781422,2.0938363213560542,7.043022901000555,1.5936662153985797,18.888848057176745,77.66467760629575,499.34951589040134,1012.0515671389121,545.0417874488876,774.6161974329223,642.4261093892574,1013.7060296643776,300.88822886939306,938.8869202727333,592.7340485236043,1506.4295613248887,1394.732997154435,4331.319103772525,1470.4254903396536,3698.191460945195,1627.8097390467983,4531.007434001884,1046.2720504614135,4531.0058616362985,1548.1178263576062,5157.071727599041,8.072617721104365,17.532992539867223,11.196587263305844,88.80341273669416,28.581096608787107,7.221267267022835,34.438987186727445,8.543045760827226,18.888848057024916,40.184027575884826,499.34951586669627,666.2984128714288,545.0417874133816,433.1708812627189,642.4261214643561,745.9866895919445,300.88822886939147,865.0581366153074,592.734048522281,1012.0515820998253]
